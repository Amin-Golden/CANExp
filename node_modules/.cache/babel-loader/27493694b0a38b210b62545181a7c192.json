{"ast":null,"code":"'use strict';\n\nvar extend = require('xtend');\n\nmodule.exports = function createHashListener(listen) {\n  return function listenToHash(hash, fn) {\n    var current = extend(hash);\n    forEach(hash, listenKey);\n    hash(onChange);\n\n    function listenKey(key) {\n      listen(hash[key], fn);\n    }\n\n    function onChange() {\n      forEach(hash, function (key) {\n        if (current[key] !== hash[key]) {\n          listenKey(key);\n        }\n      });\n      current = extend(hash);\n    }\n  };\n};\n\nfunction forEach(observable, callback) {\n  return Object.keys(observable()).forEach(callback);\n}","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/weakmap-event/object.js"],"names":["extend","require","module","exports","createHashListener","listen","listenToHash","hash","fn","current","forEach","listenKey","onChange","key","observable","callback","Object","keys"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA6BC,MAA7B,EAAqC;AACpD,SAAO,SAASC,YAAT,CAAuBC,IAAvB,EAA6BC,EAA7B,EAAiC;AACtC,QAAIC,OAAO,GAAGT,MAAM,CAACO,IAAD,CAApB;AAEAG,IAAAA,OAAO,CAACH,IAAD,EAAOI,SAAP,CAAP;AACAJ,IAAAA,IAAI,CAACK,QAAD,CAAJ;;AAEA,aAASD,SAAT,CAAoBE,GAApB,EAAyB;AACvBR,MAAAA,MAAM,CAACE,IAAI,CAACM,GAAD,CAAL,EAAYL,EAAZ,CAAN;AACD;;AAED,aAASI,QAAT,GAAqB;AACnBF,MAAAA,OAAO,CAACH,IAAD,EAAO,UAAUM,GAAV,EAAe;AAC3B,YAAIJ,OAAO,CAACI,GAAD,CAAP,KAAiBN,IAAI,CAACM,GAAD,CAAzB,EAAgC;AAC9BF,UAAAA,SAAS,CAACE,GAAD,CAAT;AACD;AACF,OAJM,CAAP;AAMAJ,MAAAA,OAAO,GAAGT,MAAM,CAACO,IAAD,CAAhB;AACD;AACF,GAnBD;AAoBD,CArBD;;AAuBA,SAASG,OAAT,CAAkBI,UAAlB,EAA8BC,QAA9B,EAAwC;AACtC,SAAOC,MAAM,CAACC,IAAP,CAAYH,UAAU,EAAtB,EAA0BJ,OAA1B,CAAkCK,QAAlC,CAAP;AACD","sourcesContent":["'use strict'\n\nvar extend = require('xtend')\n\nmodule.exports = function createHashListener (listen) {\n  return function listenToHash (hash, fn) {\n    var current = extend(hash)\n\n    forEach(hash, listenKey)\n    hash(onChange)\n\n    function listenKey (key) {\n      listen(hash[key], fn)\n    }\n\n    function onChange () {\n      forEach(hash, function (key) {\n        if (current[key] !== hash[key]) {\n          listenKey(key)\n        }\n      })\n\n      current = extend(hash)\n    }\n  }\n}\n\nfunction forEach (observable, callback) {\n  return Object.keys(observable()).forEach(callback)\n}\n"]},"metadata":{},"sourceType":"script"}
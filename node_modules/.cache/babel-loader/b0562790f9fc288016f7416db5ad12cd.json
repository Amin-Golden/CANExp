{"ast":null,"code":"'use strict';\n/* @flow */\n\nvar quantileSorted = require('./quantile_sorted');\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} sorted input\n * @returns {number} median value\n * @example\n * medianSorted([10, 2, 5, 100, 2, 1]); // => 52.5\n */\n\n\nfunction medianSorted(sorted\n/*: Array<number> */\n)\n/*:number*/\n{\n  return quantileSorted(sorted, 0.5);\n}\n\nmodule.exports = medianSorted;","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/simple-statistics/src/median_sorted.js"],"names":["quantileSorted","require","medianSorted","sorted","module","exports"],"mappings":"AAAA;AACA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBC;AAAO;AAA7B;AAAkD;AAAY;AAC1D,SAAOH,cAAc,CAACG,MAAD,EAAS,GAAT,CAArB;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBH,YAAjB","sourcesContent":["'use strict';\n/* @flow */\n\nvar quantileSorted = require('./quantile_sorted');\n\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} sorted input\n * @returns {number} median value\n * @example\n * medianSorted([10, 2, 5, 100, 2, 1]); // => 52.5\n */\nfunction medianSorted(sorted /*: Array<number> */)/*:number*/ {\n    return quantileSorted(sorted, 0.5);\n}\n\nmodule.exports = medianSorted;\n"]},"metadata":{},"sourceType":"script"}
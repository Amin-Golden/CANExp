{"ast":null,"code":"\"use strict\";\n/**\n * @author jdiaz5513\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar debug_1 = require(\"debug\");\n\nvar list_element_size_1 = require(\"../list-element-size\");\n\nvar list_1 = require(\"./list\");\n\nvar pointer_1 = require(\"./pointer\");\n\nvar trace = debug_1.default('capnp:list:composite');\ntrace('load');\n\nvar Uint16List =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Uint16List, _super);\n\n  function Uint16List() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Uint16List.prototype.get = function (index) {\n    var c = pointer_1.getContent(this);\n    return c.segment.getUint16(c.byteOffset + index * 2);\n  };\n\n  Uint16List.prototype.set = function (index, value) {\n    var c = pointer_1.getContent(this);\n    c.segment.setUint16(c.byteOffset + index * 2, value);\n  };\n\n  Uint16List.prototype.toString = function () {\n    return \"Uint16_\" + _super.prototype.toString.call(this);\n  };\n\n  Uint16List._capnp = {\n    displayName: 'List<Uint16>',\n    size: list_element_size_1.ListElementSize.BYTE_2\n  };\n  return Uint16List;\n}(list_1.List);\n\nexports.Uint16List = Uint16List;","map":{"version":3,"sources":["serialization/pointers/uint16-list.ts"],"names":[],"mappings":";AAAA;;AAEG;;;;;;;;AAEH,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,mBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,IAAM,KAAK,GAAG,OAAA,CAAA,OAAA,CAAU,sBAAV,CAAd;AACA,KAAK,CAAC,MAAD,CAAL;;AAEA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA;;AAAhC,WAAA,UAAA,GAAA;;AA4BC;;AArBC,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,KAAJ,EAAiB;AAEf,QAAM,CAAC,GAAG,SAAA,CAAA,UAAA,CAAW,IAAX,CAAV;AACA,WAAO,CAAC,CAAC,OAAF,CAAU,SAAV,CAAoB,CAAC,CAAC,UAAF,GAAe,KAAK,GAAG,CAA3C,CAAP;AAED,GALD;;AAOA,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,KAAJ,EAAmB,KAAnB,EAAgC;AAE9B,QAAM,CAAC,GAAG,SAAA,CAAA,UAAA,CAAW,IAAX,CAAV;AAEA,IAAA,CAAC,CAAC,OAAF,CAAU,SAAV,CAAoB,CAAC,CAAC,UAAF,GAAe,KAAK,GAAG,CAA3C,EAA8C,KAA9C;AAED,GAND;;AAQA,EAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AAEE,WAAO,YAAU,MAAA,CAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd,CAAjB;AAED,GAJD;;AApBgB,EAAA,UAAA,CAAA,MAAA,GAAoB;AAClC,IAAA,WAAW,EAAE,cADqB;AAElC,IAAA,IAAI,EAAE,mBAAA,CAAA,eAAA,CAAgB;AAFY,GAApB;AA0BlB,SAAA,UAAA;AAAC,CA5BD,CAAgC,MAAA,CAAA,IAAhC,CAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"../../../src","sourcesContent":["\"use strict\";\n/**\n * @author jdiaz5513\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar debug_1 = require(\"debug\");\nvar list_element_size_1 = require(\"../list-element-size\");\nvar list_1 = require(\"./list\");\nvar pointer_1 = require(\"./pointer\");\nvar trace = debug_1.default('capnp:list:composite');\ntrace('load');\nvar Uint16List = /** @class */ (function (_super) {\n    tslib_1.__extends(Uint16List, _super);\n    function Uint16List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Uint16List.prototype.get = function (index) {\n        var c = pointer_1.getContent(this);\n        return c.segment.getUint16(c.byteOffset + index * 2);\n    };\n    Uint16List.prototype.set = function (index, value) {\n        var c = pointer_1.getContent(this);\n        c.segment.setUint16(c.byteOffset + index * 2, value);\n    };\n    Uint16List.prototype.toString = function () {\n        return \"Uint16_\" + _super.prototype.toString.call(this);\n    };\n    Uint16List._capnp = {\n        displayName: 'List<Uint16>',\n        size: list_element_size_1.ListElementSize.BYTE_2,\n    };\n    return Uint16List;\n}(list_1.List));\nexports.Uint16List = Uint16List;\n\n//# sourceMappingURL=uint16-list.js.map\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n/* @flow */\n\n/**\n * The maximum is the highest number in the array. With a sorted array,\n * the last element in the array is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} maximum value\n * @example\n * maxSorted([-100, -10, 1, 2, 5]); // => 5\n */\n\nfunction maxSorted(x\n/*: Array<number> */\n)\n/*:number*/\n{\n  return x[x.length - 1];\n}\n\nmodule.exports = maxSorted;","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/simple-statistics/src/max_sorted.js"],"names":["maxSorted","x","length","module","exports"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,SAAT,CAAmBC;AAAE;AAArB;AAA0C;AAAY;AAClD,SAAOA,CAAC,CAACA,CAAC,CAACC,MAAF,GAAW,CAAZ,CAAR;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBJ,SAAjB","sourcesContent":["'use strict';\n/* @flow */\n\n/**\n * The maximum is the highest number in the array. With a sorted array,\n * the last element in the array is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} maximum value\n * @example\n * maxSorted([-100, -10, 1, 2, 5]); // => 5\n */\nfunction maxSorted(x /*: Array<number> */)/*:number*/ {\n    return x[x.length - 1];\n}\n\nmodule.exports = maxSorted;\n"]},"metadata":{},"sourceType":"script"}
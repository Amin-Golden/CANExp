{"ast":null,"code":"'use strict';\n\nvar extend = require('xtend');\n\nmodule.exports = function createArrayListener(listen) {\n  return function listenToArray(arr, fn) {\n    var current = extend(arr._list);\n    arr.forEach(function (item) {\n      listen(item, fn);\n    });\n    arr(onChange);\n\n    function onChange(data) {\n      if (!arr.getLength()) return;\n      var diff = data._diff;\n      diff.forEach(function (change) {\n        var index = change[0];\n\n        for (var i = index; i < change.length; i++) {\n          if (current[i] !== arr.get(i) && arr.get(i)) {\n            listen(arr.get(i), fn);\n          }\n        }\n      });\n      current = extend(arr._list);\n    }\n  };\n};","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/weakmap-event/array.js"],"names":["extend","require","module","exports","createArrayListener","listen","listenToArray","arr","fn","current","_list","forEach","item","onChange","data","getLength","diff","_diff","change","index","i","length","get"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,mBAAT,CAA8BC,MAA9B,EAAsC;AACrD,SAAO,SAASC,aAAT,CAAwBC,GAAxB,EAA6BC,EAA7B,EAAiC;AACtC,QAAIC,OAAO,GAAGT,MAAM,CAACO,GAAG,CAACG,KAAL,CAApB;AAEAH,IAAAA,GAAG,CAACI,OAAJ,CAAY,UAAUC,IAAV,EAAgB;AAC1BP,MAAAA,MAAM,CAACO,IAAD,EAAOJ,EAAP,CAAN;AACD,KAFD;AAGAD,IAAAA,GAAG,CAACM,QAAD,CAAH;;AAEA,aAASA,QAAT,CAAmBC,IAAnB,EAAyB;AACvB,UAAI,CAACP,GAAG,CAACQ,SAAJ,EAAL,EAAsB;AACtB,UAAIC,IAAI,GAAGF,IAAI,CAACG,KAAhB;AACAD,MAAAA,IAAI,CAACL,OAAL,CAAa,UAAUO,MAAV,EAAkB;AAC7B,YAAIC,KAAK,GAAGD,MAAM,CAAC,CAAD,CAAlB;;AACA,aAAK,IAAIE,CAAC,GAAGD,KAAb,EAAoBC,CAAC,GAAGF,MAAM,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAIX,OAAO,CAACW,CAAD,CAAP,KAAeb,GAAG,CAACe,GAAJ,CAAQF,CAAR,CAAf,IAA6Bb,GAAG,CAACe,GAAJ,CAAQF,CAAR,CAAjC,EAA6C;AAC3Cf,YAAAA,MAAM,CAACE,GAAG,CAACe,GAAJ,CAAQF,CAAR,CAAD,EAAaZ,EAAb,CAAN;AACD;AACF;AACF,OAPD;AASAC,MAAAA,OAAO,GAAGT,MAAM,CAACO,GAAG,CAACG,KAAL,CAAhB;AACD;AACF,GAtBD;AAuBD,CAxBD","sourcesContent":["'use strict'\n\nvar extend = require('xtend')\n\nmodule.exports = function createArrayListener (listen) {\n  return function listenToArray (arr, fn) {\n    var current = extend(arr._list)\n\n    arr.forEach(function (item) {\n      listen(item, fn)\n    })\n    arr(onChange)\n\n    function onChange (data) {\n      if (!arr.getLength()) return\n      var diff = data._diff\n      diff.forEach(function (change) {\n        var index = change[0]\n        for (var i = index; i < change.length; i++) {\n          if (current[i] !== arr.get(i) && arr.get(i)) {\n            listen(arr.get(i), fn)\n          }\n        }\n      })\n\n      current = extend(arr._list)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
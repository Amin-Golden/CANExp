{"ast":null,"code":"var _jsxFileName = \"/home/amax/Autoro/cabana/src/components/LoadDbcModal.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport DBC from '../models/can/dbc';\nimport OpenDbc from '../api/OpenDbc';\nimport Modal from './Modals/baseModal';\nimport GithubDbcList from './GithubDbcList';\nimport DbcUpload from './DbcUpload';\nexport default class LoadDbcModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: 'OpenDBC',\n      tabs: ['OpenDBC', 'GitHub', 'Upload'],\n      dbc: null,\n      dbcSource: null,\n      userOpenDbcRepo: null\n    };\n    this.onDbcLoaded = this.onDbcLoaded.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.renderTabNavigation = this.renderTabNavigation.bind(this);\n    this.renderTabContent = this.renderTabContent.bind(this);\n    this.renderActions = this.renderActions.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.openDbcClient.getUserOpenDbcFork().then(userOpenDbcRepo => {\n      this.setState({\n        userOpenDbcRepo\n      });\n    });\n  }\n\n  onDbcLoaded(dbcSource, dbcText) {\n    const dbc = new DBC(dbcText);\n    this.setState({\n      dbcSource,\n      dbc\n    });\n  }\n\n  handleSave() {\n    const {\n      dbc,\n      dbcSource\n    } = this.state;\n    this.props.onDbcSelected(dbcSource, dbc);\n  }\n\n  renderTabNavigation() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-tabs-navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, this.state.tabs.map(tab => /*#__PURE__*/React.createElement(\"button\", {\n      className: cx({\n        'is-active': this.state.tab === tab\n      }),\n      onClick: () => {\n        this.setState({\n          tab,\n          dbc: null,\n          dbcSource: null\n        });\n      },\n      key: tab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, tab))));\n  }\n\n  renderTabContent() {\n    const {\n      tab\n    } = this.state;\n\n    if (tab === 'OpenDBC') {\n      return /*#__PURE__*/React.createElement(GithubDbcList, {\n        onDbcLoaded: this.onDbcLoaded,\n        repo: \"commaai/opendbc\",\n        openDbcClient: this.props.openDbcClient,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (tab === 'GitHub') {\n      if (!this.props.openDbcClient.hasAuth()) {\n        return this.props.loginWithGithub;\n      }\n\n      if (this.state.userOpenDbcRepo === null) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 16\n          }\n        }, \"Fork it\");\n      }\n\n      return /*#__PURE__*/React.createElement(GithubDbcList, {\n        onDbcLoaded: this.onDbcLoaded,\n        repo: this.state.userOpenDbcRepo,\n        openDbcClient: this.props.openDbcClient,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (tab === 'Upload') {\n      return /*#__PURE__*/React.createElement(DbcUpload, {\n        onDbcLoaded: this.onDbcLoaded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  renderActions(disabled) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button--inverted\",\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button--primary\",\n      disabled: disabled,\n      onClick: this.handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"Load DBC\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      title: \"Load DBC File\",\n      subtitle: \"Modify an existing DBC file with Cabana\",\n      handleClose: this.props.handleClose,\n      navigation: this.renderTabNavigation(),\n      actions: this.renderActions(Boolean(this.state.dbc === null)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, this.renderTabContent());\n  }\n\n}\nLoadDbcModal.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  onDbcSelected: PropTypes.func.isRequired,\n  openDbcClient: PropTypes.instanceOf(OpenDbc).isRequired,\n  loginWithGithub: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/home/amax/Autoro/cabana/src/components/LoadDbcModal.js"],"names":["React","Component","PropTypes","cx","DBC","OpenDbc","Modal","GithubDbcList","DbcUpload","LoadDbcModal","constructor","props","state","tab","tabs","dbc","dbcSource","userOpenDbcRepo","onDbcLoaded","bind","handleSave","renderTabNavigation","renderTabContent","renderActions","componentDidMount","openDbcClient","getUserOpenDbcFork","then","setState","dbcText","onDbcSelected","map","hasAuth","loginWithGithub","disabled","handleClose","render","Boolean","propTypes","func","isRequired","instanceOf","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport DBC from '../models/can/dbc';\nimport OpenDbc from '../api/OpenDbc';\nimport Modal from './Modals/baseModal';\nimport GithubDbcList from './GithubDbcList';\nimport DbcUpload from './DbcUpload';\n\nexport default class LoadDbcModal extends Component {\n  static propTypes = {\n    handleClose: PropTypes.func.isRequired,\n    onDbcSelected: PropTypes.func.isRequired,\n    openDbcClient: PropTypes.instanceOf(OpenDbc).isRequired,\n    loginWithGithub: PropTypes.element.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: 'OpenDBC',\n      tabs: ['OpenDBC', 'GitHub', 'Upload'],\n      dbc: null,\n      dbcSource: null,\n      userOpenDbcRepo: null\n    };\n\n    this.onDbcLoaded = this.onDbcLoaded.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.renderTabNavigation = this.renderTabNavigation.bind(this);\n    this.renderTabContent = this.renderTabContent.bind(this);\n    this.renderActions = this.renderActions.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.openDbcClient.getUserOpenDbcFork().then((userOpenDbcRepo) => {\n      this.setState({ userOpenDbcRepo });\n    });\n  }\n\n  onDbcLoaded(dbcSource, dbcText) {\n    const dbc = new DBC(dbcText);\n    this.setState({ dbcSource, dbc });\n  }\n\n  handleSave() {\n    const { dbc, dbcSource } = this.state;\n    this.props.onDbcSelected(dbcSource, dbc);\n  }\n\n  renderTabNavigation() {\n    return (\n      <div className=\"cabana-tabs-navigation\">\n        {this.state.tabs.map((tab) => (\n          <button\n            className={cx({ 'is-active': this.state.tab === tab })}\n            onClick={() => {\n              this.setState({\n                tab,\n                dbc: null,\n                dbcSource: null,\n              });\n            }}\n            key={tab}\n          >\n            <span>{tab}</span>\n          </button>\n        ))}\n      </div>\n    );\n  }\n\n  renderTabContent() {\n    const { tab } = this.state;\n    if (tab === 'OpenDBC') {\n      return (\n        <GithubDbcList\n          onDbcLoaded={this.onDbcLoaded}\n          repo=\"commaai/opendbc\"\n          openDbcClient={this.props.openDbcClient}\n        />\n      );\n    }\n    if (tab === 'GitHub') {\n      if (!this.props.openDbcClient.hasAuth()) {\n        return this.props.loginWithGithub;\n      }\n      if (this.state.userOpenDbcRepo === null) {\n        return <div>Fork it</div>;\n      }\n      return (\n        <GithubDbcList\n          onDbcLoaded={this.onDbcLoaded}\n          repo={this.state.userOpenDbcRepo}\n          openDbcClient={this.props.openDbcClient}\n        />\n      );\n    }\n    if (tab === 'Upload') {\n      return <DbcUpload onDbcLoaded={this.onDbcLoaded} />;\n    }\n  }\n\n  renderActions(disabled) {\n    return (\n      <div>\n        <button className=\"button--inverted\" onClick={this.props.handleClose}>\n          <span>Cancel</span>\n        </button>\n        <button className=\"button--primary\" disabled={ disabled } onClick={ this.handleSave }>\n          <span>Load DBC</span>\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        title=\"Load DBC File\"\n        subtitle=\"Modify an existing DBC file with Cabana\"\n        handleClose={this.props.handleClose}\n        navigation={this.renderTabNavigation()}\n        actions={this.renderActions(Boolean(this.state.dbc === null))}\n      >\n        {this.renderTabContent()}\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const ReaderStream = require('./reader');\n\nconst StreamSelector = require('stream-selector');\n\nconst fileType = require('file-type');\n\nconst zlib = require('zlib');\n\nconst bz2 = require('wasm-bz2/stream');\n\nconst PassThrough = require('stream').PassThrough;\n\nmodule.exports = DecompressStream;\n\nfunction DecompressStream(inputStream, options) {\n  options = options || {};\n  var selectorStream = new StreamSelector({\n    minBuffer: 6,\n    selector: selector\n  });\n  selectorStream.on('error', err => {\n    throw err;\n  });\n  inputStream.pipe(selectorStream);\n  return new ReaderStream(selectorStream, options);\n\n  function selector(chunk) {\n    var type = fileType(chunk);\n\n    if (!type) {\n      return new PassThrough();\n    }\n\n    switch (type.ext) {\n      case '7z':\n        // return lz4.createDecoderStream();\n        throw new Error('No streaming 7z decompressor yet');\n\n      case 'bz2':\n        return new bz2();\n\n      case 'gz':\n        return zlib.createGunzip();\n\n      default:\n        console.log('Unknown file format', type);\n        return new PassThrough();\n    }\n  }\n}","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/@commaai/log_reader/src/decompress.js"],"names":["ReaderStream","require","StreamSelector","fileType","zlib","bz2","PassThrough","module","exports","DecompressStream","inputStream","options","selectorStream","minBuffer","selector","on","err","pipe","chunk","type","ext","Error","createGunzip","console","log"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,UAAD,CAA5B;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,iBAAD,CAA9B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,GAAG,GAAGJ,OAAO,CAAC,iBAAD,CAAnB;;AACA,MAAMK,WAAW,GAAGL,OAAO,CAAC,QAAD,CAAP,CAAkBK,WAAtC;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,gBAAjB;;AAEA,SAASA,gBAAT,CAA2BC,WAA3B,EAAwCC,OAAxC,EAAiD;AAC/CA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,cAAc,GAAG,IAAIV,cAAJ,CAAmB;AACtCW,IAAAA,SAAS,EAAE,CAD2B;AAEtCC,IAAAA,QAAQ,EAAEA;AAF4B,GAAnB,CAArB;AAKAF,EAAAA,cAAc,CAACG,EAAf,CAAkB,OAAlB,EAA4BC,GAAD,IAAS;AAAE,UAAMA,GAAN;AAAY,GAAlD;AACAN,EAAAA,WAAW,CAACO,IAAZ,CAAiBL,cAAjB;AAEA,SAAO,IAAIZ,YAAJ,CAAiBY,cAAjB,EAAiCD,OAAjC,CAAP;;AAEA,WAASG,QAAT,CAAmBI,KAAnB,EAA0B;AACxB,QAAIC,IAAI,GAAGhB,QAAQ,CAACe,KAAD,CAAnB;;AACA,QAAI,CAACC,IAAL,EAAW;AACT,aAAO,IAAIb,WAAJ,EAAP;AACD;;AACD,YAAQa,IAAI,CAACC,GAAb;AACE,WAAK,IAAL;AACE;AACA,cAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;;AACF,WAAK,KAAL;AACE,eAAO,IAAIhB,GAAJ,EAAP;;AACF,WAAK,IAAL;AACE,eAAOD,IAAI,CAACkB,YAAL,EAAP;;AACF;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCL,IAAnC;AACA,eAAO,IAAIb,WAAJ,EAAP;AAVJ;AAYD;AACF","sourcesContent":["const ReaderStream = require('./reader');\nconst StreamSelector = require('stream-selector');\nconst fileType = require('file-type');\nconst zlib = require('zlib');\nconst bz2 = require('wasm-bz2/stream');\nconst PassThrough = require('stream').PassThrough;\n\nmodule.exports = DecompressStream;\n\nfunction DecompressStream (inputStream, options) {\n  options = options || {};\n  var selectorStream = new StreamSelector({\n    minBuffer: 6,\n    selector: selector\n  });\n\n  selectorStream.on('error', (err) => { throw err; });\n  inputStream.pipe(selectorStream);\n\n  return new ReaderStream(selectorStream, options);\n\n  function selector (chunk) {\n    var type = fileType(chunk);\n    if (!type) {\n      return new PassThrough();\n    }\n    switch (type.ext) {\n      case '7z':\n        // return lz4.createDecoderStream();\n        throw new Error('No streaming 7z decompressor yet');\n      case 'bz2':\n        return new bz2();\n      case 'gz':\n        return zlib.createGunzip();\n      default:\n        console.log('Unknown file format', type);\n        return new PassThrough();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
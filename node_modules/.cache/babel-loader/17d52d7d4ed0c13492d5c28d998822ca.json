{"ast":null,"code":"'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\n\n\nfunction sampleCovariance(x\n/*:Array<number>*/\n, y\n/*:Array<number>*/\n)\n/*:number*/\n{\n  // The two datasets must have the same length which must be more than 1\n  if (x.length !== y.length) {\n    throw new Error('sampleCovariance requires samples with equal lengths');\n  }\n\n  if (x.length < 2) {\n    throw new Error('sampleCovariance requires at least two data points in each sample');\n  } // determine the mean of each dataset so that we can judge each\n  // value of the dataset fairly as the difference from the mean. this\n  // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n  // does not suffer because of the difference in absolute values\n\n\n  var xmean = mean(x),\n      ymean = mean(y),\n      sum = 0; // for each pair of values, the covariance increases when their\n  // difference from the mean is associated - if both are well above\n  // or if both are well below\n  // the mean, the covariance increases significantly.\n\n  for (var i = 0; i < x.length; i++) {\n    sum += (x[i] - xmean) * (y[i] - ymean);\n  } // this is Bessels' Correction: an adjustment made to sample statistics\n  // that allows for the reduced degree of freedom entailed in calculating\n  // values from samples rather than complete populations.\n\n\n  var besselsCorrection = x.length - 1; // the covariance is weighted by the length of the datasets.\n\n  return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/simple-statistics/src/sample_covariance.js"],"names":["mean","require","sampleCovariance","x","y","length","Error","xmean","ymean","sum","i","besselsCorrection","module","exports"],"mappings":"AAAA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,gBAAT,CAA0BC;AAAE;AAA5B,EAAgDC;AAAE;AAAlD;AAAqE;AAAY;AAE7E;AACA,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;AACvB,UAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACH;;AAED,MAAIH,CAAC,CAACE,MAAF,GAAW,CAAf,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAU,mEAAV,CAAN;AACH,GAT4E,CAW7E;AACA;AACA;AACA;;;AACA,MAAIC,KAAK,GAAGP,IAAI,CAACG,CAAD,CAAhB;AAAA,MACIK,KAAK,GAAGR,IAAI,CAACI,CAAD,CADhB;AAAA,MAEIK,GAAG,GAAG,CAFV,CAf6E,CAmB7E;AACA;AACA;AACA;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAAC,CAACE,MAAtB,EAA8BK,CAAC,EAA/B,EAAmC;AAC/BD,IAAAA,GAAG,IAAI,CAACN,CAAC,CAACO,CAAD,CAAD,GAAOH,KAAR,KAAkBH,CAAC,CAACM,CAAD,CAAD,GAAOF,KAAzB,CAAP;AACH,GAzB4E,CA2B7E;AACA;AACA;;;AACA,MAAIG,iBAAiB,GAAGR,CAAC,CAACE,MAAF,GAAW,CAAnC,CA9B6E,CAgC7E;;AACA,SAAOI,GAAG,GAAGE,iBAAb;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBX,gBAAjB","sourcesContent":["'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error('sampleCovariance requires samples with equal lengths');\n    }\n\n    if (x.length < 2) {\n        throw new Error('sampleCovariance requires at least two data points in each sample');\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n"]},"metadata":{},"sourceType":"script"}
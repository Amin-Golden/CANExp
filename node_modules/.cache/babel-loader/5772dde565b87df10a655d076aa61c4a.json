{"ast":null,"code":"var _jsxFileName = \"/home/amax/Autoro/cabana/src/components/SignalLegendEntry/NumberField.js\";\nimport React from 'react';\nimport Field from './Field';\nexport default (_ref => {\n  let {\n    fieldSpec,\n    signal,\n    isExpanded,\n    signalEdited,\n    updateField,\n    valid\n  } = _ref;\n  const {\n    field,\n    title\n  } = fieldSpec;\n  const htmlFor = `${signal.name}_${field}`;\n  let valueCol;\n\n  if (isExpanded) {\n    let value = signalEdited;\n\n    if (value !== '') {\n      const num = Number(value);\n      value = isNaN(num) ? '' : num;\n    }\n\n    valueCol = /*#__PURE__*/React.createElement(\"input\", {\n      id: htmlFor,\n      type: \"number\",\n      value: value,\n      onChange: e => {\n        updateField(fieldSpec, e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    });\n  } else {\n    const value = signal[field];\n    valueCol = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    }, value);\n  }\n\n  return /*#__PURE__*/React.createElement(Field, {\n    title: typeof title === 'function' ? title(signal) : title,\n    htmlFor: htmlFor,\n    valid: valid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, valueCol);\n});","map":{"version":3,"sources":["/home/amax/Autoro/cabana/src/components/SignalLegendEntry/NumberField.js"],"names":["React","Field","fieldSpec","signal","isExpanded","signalEdited","updateField","valid","field","title","htmlFor","name","valueCol","value","num","Number","isNaN","e","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,gBAAe,QAOT;AAAA,MAPU;AACdC,IAAAA,SADc;AAEdC,IAAAA,MAFc;AAGdC,IAAAA,UAHc;AAIdC,IAAAA,YAJc;AAKdC,IAAAA,WALc;AAMdC,IAAAA;AANc,GAOV;AACJ,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBP,SAAzB;AACA,QAAMQ,OAAO,GAAI,GAAEP,MAAM,CAACQ,IAAK,IAAGH,KAAM,EAAxC;AACA,MAAII,QAAJ;;AAEA,MAAIR,UAAJ,EAAgB;AACd,QAAIS,KAAK,GAAGR,YAAZ;;AACA,QAAIQ,KAAK,KAAK,EAAd,EAAkB;AAChB,YAAMC,GAAG,GAAGC,MAAM,CAACF,KAAD,CAAlB;AACAA,MAAAA,KAAK,GAAGG,KAAK,CAACF,GAAD,CAAL,GAAa,EAAb,GAAkBA,GAA1B;AACD;;AACDF,IAAAA,QAAQ,gBACN;AACE,MAAA,EAAE,EAAEF,OADN;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAEG,KAHT;AAIE,MAAA,QAAQ,EAAGI,CAAD,IAAO;AACfX,QAAAA,WAAW,CAACJ,SAAD,EAAYe,CAAC,CAACC,MAAF,CAASL,KAArB,CAAX;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAhBD,MAgBO;AACL,UAAMA,KAAK,GAAGV,MAAM,CAACK,KAAD,CAApB;AACAI,IAAAA,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,KAAP,CAAX;AACD;;AACD,sBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE,OAAOJ,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACN,MAAD,CAAnC,GAA8CM,KADvD;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,KAAK,EAAEH,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGK,QALH,CADF;AASD,CAzCD","sourcesContent":["import React from 'react';\nimport Field from './Field';\n\nexport default ({\n  fieldSpec,\n  signal,\n  isExpanded,\n  signalEdited,\n  updateField,\n  valid\n}) => {\n  const { field, title } = fieldSpec;\n  const htmlFor = `${signal.name}_${field}`;\n  let valueCol;\n\n  if (isExpanded) {\n    let value = signalEdited;\n    if (value !== '') {\n      const num = Number(value);\n      value = isNaN(num) ? '' : num;\n    }\n    valueCol = (\n      <input\n        id={htmlFor}\n        type=\"number\"\n        value={value}\n        onChange={(e) => {\n          updateField(fieldSpec, e.target.value);\n        }}\n      />\n    );\n  } else {\n    const value = signal[field];\n    valueCol = <span>{value}</span>;\n  }\n  return (\n    <Field\n      title={typeof title === 'function' ? title(signal) : title}\n      htmlFor={htmlFor}\n      valid={valid}\n    >\n      {valueCol}\n    </Field>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
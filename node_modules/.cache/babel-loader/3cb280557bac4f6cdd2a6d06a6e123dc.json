{"ast":null,"code":"'use strict';\n/* @flow */\n\n/**\n * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean) is\n * a mean function that is more useful for numbers in different\n * ranges.\n *\n * This is the nth root of the input numbers multiplied by each other.\n *\n * The geometric mean is often useful for\n * **[proportional growth](https://en.wikipedia.org/wiki/Geometric_mean#Proportional_growth)**: given\n * growth rates for multiple years, like _80%, 16.66% and 42.85%_, a simple\n * mean will incorrectly estimate an average growth rate, whereas a geometric\n * mean will correctly estimate a growth rate that, over those years,\n * will yield the same end value.\n *\n * This runs on `O(n)`, linear time in respect to the array\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * var growthRates = [1.80, 1.166666, 1.428571];\n * var averageGrowth = geometricMean(growthRates);\n * var averageGrowthRates = [averageGrowth, averageGrowth, averageGrowth];\n * var startingValue = 10;\n * var startingValueMean = 10;\n * growthRates.forEach(function(rate) {\n *   startingValue *= rate;\n * });\n * averageGrowthRates.forEach(function(rate) {\n *   startingValueMean *= rate;\n * });\n * startingValueMean === startingValue;\n */\n\nfunction geometricMean(x\n/*: Array<number> */\n) {\n  // The mean of no numbers is null\n  if (x.length === 0) {\n    throw new Error('geometricMean requires at least one data point');\n  } // the starting value.\n\n\n  var value = 1;\n\n  for (var i = 0; i < x.length; i++) {\n    // the geometric mean is only valid for positive numbers\n    if (x[i] <= 0) {\n      throw new Error('geometricMean requires only positive numbers as input');\n    } // repeatedly multiply the value by each number\n\n\n    value *= x[i];\n  }\n\n  return Math.pow(value, 1 / x.length);\n}\n\nmodule.exports = geometricMean;","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/simple-statistics/src/geometric_mean.js"],"names":["geometricMean","x","length","Error","value","i","Math","pow","module","exports"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,aAAT,CAAuBC;AAAE;AAAzB,EAA+C;AAC3C;AACA,MAAIA,CAAC,CAACC,MAAF,KAAa,CAAjB,EAAoB;AAChB,UAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACH,GAJ0C,CAM3C;;;AACA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAAC,CAACC,MAAtB,EAA8BG,CAAC,EAA/B,EAAmC;AAC/B;AACA,QAAIJ,CAAC,CAACI,CAAD,CAAD,IAAQ,CAAZ,EAAe;AACX,YAAM,IAAIF,KAAJ,CAAU,uDAAV,CAAN;AACH,KAJ8B,CAM/B;;;AACAC,IAAAA,KAAK,IAAIH,CAAC,CAACI,CAAD,CAAV;AACH;;AAED,SAAOC,IAAI,CAACC,GAAL,CAASH,KAAT,EAAgB,IAAIH,CAAC,CAACC,MAAtB,CAAP;AACH;;AAEDM,MAAM,CAACC,OAAP,GAAiBT,aAAjB","sourcesContent":["'use strict';\n/* @flow */\n\n/**\n * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean) is\n * a mean function that is more useful for numbers in different\n * ranges.\n *\n * This is the nth root of the input numbers multiplied by each other.\n *\n * The geometric mean is often useful for\n * **[proportional growth](https://en.wikipedia.org/wiki/Geometric_mean#Proportional_growth)**: given\n * growth rates for multiple years, like _80%, 16.66% and 42.85%_, a simple\n * mean will incorrectly estimate an average growth rate, whereas a geometric\n * mean will correctly estimate a growth rate that, over those years,\n * will yield the same end value.\n *\n * This runs on `O(n)`, linear time in respect to the array\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * var growthRates = [1.80, 1.166666, 1.428571];\n * var averageGrowth = geometricMean(growthRates);\n * var averageGrowthRates = [averageGrowth, averageGrowth, averageGrowth];\n * var startingValue = 10;\n * var startingValueMean = 10;\n * growthRates.forEach(function(rate) {\n *   startingValue *= rate;\n * });\n * averageGrowthRates.forEach(function(rate) {\n *   startingValueMean *= rate;\n * });\n * startingValueMean === startingValue;\n */\nfunction geometricMean(x /*: Array<number> */) {\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        throw new Error('geometricMean requires at least one data point');\n    }\n\n    // the starting value.\n    var value = 1;\n\n    for (var i = 0; i < x.length; i++) {\n        // the geometric mean is only valid for positive numbers\n        if (x[i] <= 0) {\n            throw new Error('geometricMean requires only positive numbers as input');\n        }\n\n        // repeatedly multiply the value by each number\n        value *= x[i];\n    }\n\n    return Math.pow(value, 1 / x.length);\n}\n\nmodule.exports = geometricMean;\n"]},"metadata":{},"sourceType":"script"}
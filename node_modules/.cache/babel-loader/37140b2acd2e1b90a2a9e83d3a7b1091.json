{"ast":null,"code":"'use strict';\n/* @flow */\n\n/**\n * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean) is\n * a mean function typically used to find the average of rates.\n * This mean is calculated by taking the reciprocal of the arithmetic mean\n * of the reciprocals of the input numbers.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs on `O(n)`, linear time in respect to the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} harmonic mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * harmonicMean([2, 3]).toFixed(2) // => '2.40'\n */\n\nfunction harmonicMean(x\n/*: Array<number> */\n) {\n  // The mean of no numbers is null\n  if (x.length === 0) {\n    throw new Error('harmonicMean requires at least one data point');\n  }\n\n  var reciprocalSum = 0;\n\n  for (var i = 0; i < x.length; i++) {\n    // the harmonic mean is only valid for positive numbers\n    if (x[i] <= 0) {\n      throw new Error('harmonicMean requires only positive numbers as input');\n    }\n\n    reciprocalSum += 1 / x[i];\n  } // divide n by the the reciprocal sum\n\n\n  return x.length / reciprocalSum;\n}\n\nmodule.exports = harmonicMean;","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/simple-statistics/src/harmonic_mean.js"],"names":["harmonicMean","x","length","Error","reciprocalSum","i","module","exports"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,YAAT,CAAsBC;AAAE;AAAxB,EAA8C;AAC1C;AACA,MAAIA,CAAC,CAACC,MAAF,KAAa,CAAjB,EAAoB;AAChB,UAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACH;;AAED,MAAIC,aAAa,GAAG,CAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAAC,CAACC,MAAtB,EAA8BG,CAAC,EAA/B,EAAmC;AAC/B;AACA,QAAIJ,CAAC,CAACI,CAAD,CAAD,IAAQ,CAAZ,EAAe;AACX,YAAM,IAAIF,KAAJ,CAAU,sDAAV,CAAN;AACH;;AAEDC,IAAAA,aAAa,IAAI,IAAIH,CAAC,CAACI,CAAD,CAAtB;AACH,GAfyC,CAiB1C;;;AACA,SAAOJ,CAAC,CAACC,MAAF,GAAWE,aAAlB;AACH;;AAEDE,MAAM,CAACC,OAAP,GAAiBP,YAAjB","sourcesContent":["'use strict';\n/* @flow */\n\n/**\n * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean) is\n * a mean function typically used to find the average of rates.\n * This mean is calculated by taking the reciprocal of the arithmetic mean\n * of the reciprocals of the input numbers.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs on `O(n)`, linear time in respect to the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} harmonic mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * harmonicMean([2, 3]).toFixed(2) // => '2.40'\n */\nfunction harmonicMean(x /*: Array<number> */) {\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        throw new Error('harmonicMean requires at least one data point');\n    }\n\n    var reciprocalSum = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        // the harmonic mean is only valid for positive numbers\n        if (x[i] <= 0) {\n            throw new Error('harmonicMean requires only positive numbers as input');\n        }\n\n        reciprocalSum += 1 / x[i];\n    }\n\n    // divide n by the the reciprocal sum\n    return x.length / reciprocalSum;\n}\n\nmodule.exports = harmonicMean;\n"]},"metadata":{},"sourceType":"script"}
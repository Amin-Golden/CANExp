{"ast":null,"code":"var _jsxFileName = \"/home/amax/Autoro/cabana/src/components/Meta.js\";\nimport React, { Component } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Clipboard from 'clipboard';\nimport MessageBytes from './MessageBytes';\n\nconst {\n  ckmeans\n} = require('simple-statistics');\n\nexport default class Meta extends Component {\n  constructor(props) {\n    super(props);\n    this.onFilterChanged = this.onFilterChanged.bind(this);\n    this.onFilterFocus = this.onFilterFocus.bind(this);\n    this.onFilterUnfocus = this.onFilterUnfocus.bind(this);\n    this.canMsgFilter = this.canMsgFilter.bind(this);\n    this.renderMessageBytes = this.renderMessageBytes.bind(this);\n    const {\n      dbcLastSaved\n    } = props;\n    this.state = {\n      filterText: 'Filter',\n      lastSaved: dbcLastSaved !== null ? this.props.dbcLastSaved.fromNow() : null,\n      hoveredMessages: [],\n      orderedMessageKeys: []\n    };\n  }\n\n  componentDidMount() {\n    this.lastSavedTimer = setInterval(() => {\n      if (this.props.dbcLastSaved !== null) {\n        this.setState({\n          lastSaved: this.props.dbcLastSaved.fromNow()\n        });\n      }\n    }, 30000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.lastSavedTimer);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lastSaved !== this.props.lastSaved) {\n      this.setState({\n        lastSaved: this.props.dbcLastSaved.fromNow()\n      });\n    }\n\n    if (JSON.stringify(Object.keys(prevProps.messages)) !== JSON.stringify(Object.keys(this.props.messages))) {\n      const orderedMessageKeys = this.sortMessages(this.props.messages);\n      this.setState({\n        hoveredMessages: [],\n        orderedMessageKeys\n      });\n    } else if (this.state.orderedMessageKeys.length === 0 || !this.props.live && prevProps.messages && this.props.messages && this.byteCountsDidUpdate(prevProps.messages, this.props.messages)) {\n      const orderedMessageKeys = this.sortMessages(this.props.messages);\n\n      if (orderedMessageKeys.length > 0) {\n        this.setState({\n          orderedMessageKeys\n        });\n      }\n    }\n  }\n\n  byteCountsDidUpdate(prevMessages, nextMessages) {\n    return Object.entries(nextMessages).some(_ref => {\n      let [msgId, msg] = _ref;\n      return JSON.stringify(msg.byteStateChangeCounts) !== JSON.stringify(prevMessages[msgId].byteStateChangeCounts);\n    });\n  }\n\n  sortMessages(messages) {\n    // Returns list of message keys, ordered as follows:\n    // messages are binned into at most 10 bins based on entry count\n    // each bin is sorted by message CAN address\n    // then the list of bins is flattened and reversed to\n    // yield a count-descending, address-ascending order.\n    if (Object.keys(messages).length === 0) return [];\n    const messagesByEntryCount = Object.entries(messages).reduce((partialMapping, _ref2) => {\n      let [msgId, msg] = _ref2;\n      const entryCountKey = msg.entries.length.toString(); // js object keys are strings\n\n      if (!partialMapping[entryCountKey]) {\n        partialMapping[entryCountKey] = [msg];\n      } else {\n        partialMapping[entryCountKey].push(msg);\n      }\n\n      return partialMapping;\n    }, {});\n    const entryCounts = Object.keys(messagesByEntryCount).map(count => parseInt(count, 10));\n    const binnedEntryCounts = ckmeans(entryCounts, Math.min(entryCounts.length, 10));\n    const sortedKeys = binnedEntryCounts.map(bin => bin.map(entryCount => messagesByEntryCount[entryCount.toString()]).reduce((messages, partial) => messages.concat(partial), []).sort((msg1, msg2) => {\n      if (msg1.address < msg2.address) {\n        return 1;\n      }\n\n      return -1;\n    }).map(msg => msg.id)).reduce((keys, bin) => keys.concat(bin), []).reverse();\n    return sortedKeys;\n  }\n\n  onFilterChanged(e) {\n    let val = e.target.value;\n    if (val.trim() === 'Filter') val = '';\n    this.setState({\n      filterText: val\n    });\n  }\n\n  onFilterFocus(e) {\n    if (this.state.filterText.trim() === 'Filter') {\n      this.setState({\n        filterText: ''\n      });\n    }\n  }\n\n  onFilterUnfocus(e) {\n    if (this.state.filterText.trim() === '') {\n      this.setState({\n        filterText: 'Filter'\n      });\n    }\n  }\n\n  canMsgFilter(msg) {\n    const {\n      filterText\n    } = this.state;\n    const msgName = msg.frame ? msg.frame.name : '';\n    return filterText === 'Filter' || filterText === '' || msg.id.toLowerCase().indexOf(filterText.toLowerCase()) !== -1 || msgName.toLowerCase().indexOf(filterText.toLowerCase()) !== -1;\n  }\n\n  lastSavedPretty() {\n    const {\n      dbcLastSaved\n    } = this.props;\n    return dbcLastSaved.fromNow();\n  }\n\n  onMessageHover(key) {\n    const {\n      hoveredMessages\n    } = this.state;\n    if (hoveredMessages.indexOf(key) !== -1) return;\n    hoveredMessages.push(key);\n    this.setState({\n      hoveredMessages\n    });\n  }\n\n  onMessageHoverEnd(key) {\n    let {\n      hoveredMessages\n    } = this.state;\n    hoveredMessages = hoveredMessages.filter(m => m !== key);\n    this.setState({\n      hoveredMessages\n    });\n  }\n\n  onMsgRemoveClick(key) {\n    let {\n      selectedMessages\n    } = this.state;\n    selectedMessages = selectedMessages.filter(m => m !== key);\n    this.props.onMessageUnselected(key);\n    this.setState({\n      selectedMessages\n    });\n  }\n\n  onMessageSelected(key) {\n    // uncomment when we support multiple messages\n    // const selectedMessages = this.state.selectedMessages.filter((m) => m !== key);\n    const selectedMessages = [];\n    selectedMessages.push(key);\n    this.props.updateSelectedMessages(selectedMessages);\n    this.props.onMessageSelected(key);\n  }\n\n  orderedMessages() {\n    const {\n      orderedMessageKeys\n    } = this.state;\n    const {\n      messages\n    } = this.props;\n    return orderedMessageKeys.map(key => messages[key]);\n  }\n\n  selectedMessageClass(messageId) {\n    return this.props.selectedMessages.includes(messageId) ? 'is-selected' : null;\n  }\n\n  renderMessageBytes(msg) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      onClick: () => {\n        this.onMessageSelected(msg.id);\n      },\n      key: msg.id,\n      className: cx('cabana-meta-messages-list-item', this.selectedMessageClass(msg.id)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }, msg.frame ? msg.frame.name : 'untitled'), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, msg.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, msg.entries.length), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-messages-list-item-bytes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MessageBytes, {\n      key: msg.id,\n      message: msg,\n      seekIndex: this.props.seekIndex,\n      seekTime: this.props.seekTime,\n      live: this.props.live,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  renderCanMessages() {\n    return this.orderedMessages().filter(this.canMsgFilter).map(this.renderMessageBytes);\n  }\n\n  renderAvailableMessagesList() {\n    if (Object.keys(this.props.messages).length === 0) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 14\n        }\n      }, \"Loading messages...\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n      cellPadding: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, \"Count\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, \"Bytes\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }, this.renderCanMessages())));\n  }\n\n  saveable() {\n    try {\n      // eslint-disable-next-line\n      \"serviceWorker\" in navigator && !!new ReadableStream() && !!new WritableStream(); // eslint-disable-line no-undef\n\n      return 'saveable';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"cabana-meta-header-label t-capline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }\n    }, \"Currently editing:\"), /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"cabana-meta-header-filename\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }\n    }, this.props.dbcFilename), this.props.dbcLastSaved !== null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-header-last-saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, \"Last saved:\", this.lastSavedPretty())) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: `cabana-meta-header-actions ${this.saveable()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-header-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.showLoadDbc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, \"Load DBC\")), this.saveable() && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-header-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.saveLog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, \"Save Log\")), this.props.shareUrl ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-header-action special-wide\",\n      \"data-clipboard-text\": this.props.shareUrl,\n      \"data-clipboard-action\": \"copy\",\n      ref: ref => ref ? new Clipboard(ref) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"button\",\n      href: this.props.shareUrl,\n      onClick: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, \"Copy Share Link\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-header-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.showSaveDbc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, \"Save DBC\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-messages-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"t-capline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }\n    }, \"Available messages\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-messages-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-field form-field--small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.filterText,\n      onFocus: this.onFilterFocus,\n      onBlur: this.onFilterUnfocus,\n      onChange: this.onFilterChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-meta-messages-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }, this.renderAvailableMessagesList()));\n  }\n\n}\nMeta.propTypes = {\n  onMessageSelected: PropTypes.func,\n  onMessageUnselected: PropTypes.func,\n  dongleId: PropTypes.string,\n  name: PropTypes.string,\n  messages: PropTypes.objectOf(PropTypes.object),\n  selectedMessages: PropTypes.array,\n  onPartChanged: PropTypes.func,\n  partsCount: PropTypes.number,\n  showLoadDbc: PropTypes.func,\n  showSaveDbc: PropTypes.func,\n  dbcFilename: PropTypes.string,\n  dbcLastSaved: PropTypes.object,\n  // moment.js object,\n  showEditMessageModal: PropTypes.func,\n  route: PropTypes.object,\n  partsLoaded: PropTypes.number,\n  currentParts: PropTypes.array,\n  seekTime: PropTypes.number,\n  loginWithGithub: PropTypes.element,\n  isDemo: PropTypes.bool,\n  live: PropTypes.bool\n};","map":{"version":3,"sources":["/home/amax/Autoro/cabana/src/components/Meta.js"],"names":["React","Component","cx","PropTypes","Clipboard","MessageBytes","ckmeans","require","Meta","constructor","props","onFilterChanged","bind","onFilterFocus","onFilterUnfocus","canMsgFilter","renderMessageBytes","dbcLastSaved","state","filterText","lastSaved","fromNow","hoveredMessages","orderedMessageKeys","componentDidMount","lastSavedTimer","setInterval","setState","componentWillUnmount","window","clearInterval","componentDidUpdate","prevProps","JSON","stringify","Object","keys","messages","sortMessages","length","live","byteCountsDidUpdate","prevMessages","nextMessages","entries","some","msgId","msg","byteStateChangeCounts","messagesByEntryCount","reduce","partialMapping","entryCountKey","toString","push","entryCounts","map","count","parseInt","binnedEntryCounts","Math","min","sortedKeys","bin","entryCount","partial","concat","sort","msg1","msg2","address","id","reverse","e","val","target","value","trim","msgName","frame","name","toLowerCase","indexOf","lastSavedPretty","onMessageHover","key","onMessageHoverEnd","filter","m","onMsgRemoveClick","selectedMessages","onMessageUnselected","onMessageSelected","updateSelectedMessages","orderedMessages","selectedMessageClass","messageId","includes","seekIndex","seekTime","renderCanMessages","renderAvailableMessagesList","saveable","navigator","ReadableStream","WritableStream","render","dbcFilename","showLoadDbc","saveLog","shareUrl","ref","preventDefault","showSaveDbc","propTypes","func","dongleId","string","objectOf","object","array","onPartChanged","partsCount","number","showEditMessageModal","route","partsLoaded","currentParts","loginWithGithub","element","isDemo","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Clipboard from 'clipboard';\n\nimport MessageBytes from './MessageBytes';\n\nconst { ckmeans } = require('simple-statistics');\n\nexport default class Meta extends Component {\n  static propTypes = {\n    onMessageSelected: PropTypes.func,\n    onMessageUnselected: PropTypes.func,\n    dongleId: PropTypes.string,\n    name: PropTypes.string,\n    messages: PropTypes.objectOf(PropTypes.object),\n    selectedMessages: PropTypes.array,\n    onPartChanged: PropTypes.func,\n    partsCount: PropTypes.number,\n    showLoadDbc: PropTypes.func,\n    showSaveDbc: PropTypes.func,\n    dbcFilename: PropTypes.string,\n    dbcLastSaved: PropTypes.object, // moment.js object,\n    showEditMessageModal: PropTypes.func,\n    route: PropTypes.object,\n    partsLoaded: PropTypes.number,\n    currentParts: PropTypes.array,\n    seekTime: PropTypes.number,\n    loginWithGithub: PropTypes.element,\n    isDemo: PropTypes.bool,\n    live: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onFilterChanged = this.onFilterChanged.bind(this);\n    this.onFilterFocus = this.onFilterFocus.bind(this);\n    this.onFilterUnfocus = this.onFilterUnfocus.bind(this);\n    this.canMsgFilter = this.canMsgFilter.bind(this);\n    this.renderMessageBytes = this.renderMessageBytes.bind(this);\n\n    const { dbcLastSaved } = props;\n\n    this.state = {\n      filterText: 'Filter',\n      lastSaved:\n        dbcLastSaved !== null ? this.props.dbcLastSaved.fromNow() : null,\n      hoveredMessages: [],\n      orderedMessageKeys: [],\n    };\n  }\n\n  componentDidMount() {\n    this.lastSavedTimer = setInterval(() => {\n      if (this.props.dbcLastSaved !== null) {\n        this.setState({ lastSaved: this.props.dbcLastSaved.fromNow() });\n      }\n    }, 30000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.lastSavedTimer);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lastSaved !== this.props.lastSaved) {\n      this.setState({ lastSaved: this.props.dbcLastSaved.fromNow() });\n    }\n\n    if (JSON.stringify(Object.keys(prevProps.messages)) !== JSON.stringify(Object.keys(this.props.messages))) {\n      const orderedMessageKeys = this.sortMessages(this.props.messages);\n      this.setState({ hoveredMessages: [], orderedMessageKeys });\n    } else if (this.state.orderedMessageKeys.length === 0 || (!this.props.live && prevProps.messages &&\n      this.props.messages && this.byteCountsDidUpdate(prevProps.messages, this.props.messages)))\n    {\n      const orderedMessageKeys = this.sortMessages(this.props.messages);\n      if (orderedMessageKeys.length > 0) {\n        this.setState({ orderedMessageKeys });\n      }\n    }\n  }\n\n  byteCountsDidUpdate(prevMessages, nextMessages) {\n    return Object.entries(nextMessages).some(\n      ([msgId, msg]) => JSON.stringify(msg.byteStateChangeCounts)\n        !== JSON.stringify(prevMessages[msgId].byteStateChangeCounts)\n    );\n  }\n\n  sortMessages(messages) {\n    // Returns list of message keys, ordered as follows:\n    // messages are binned into at most 10 bins based on entry count\n    // each bin is sorted by message CAN address\n    // then the list of bins is flattened and reversed to\n    // yield a count-descending, address-ascending order.\n\n    if (Object.keys(messages).length === 0) return [];\n    const messagesByEntryCount = Object.entries(messages).reduce(\n      (partialMapping, [msgId, msg]) => {\n        const entryCountKey = msg.entries.length.toString(); // js object keys are strings\n        if (!partialMapping[entryCountKey]) {\n          partialMapping[entryCountKey] = [msg];\n        } else {\n          partialMapping[entryCountKey].push(msg);\n        }\n        return partialMapping;\n      },\n      {}\n    );\n\n    const entryCounts = Object.keys(messagesByEntryCount).map((count) => parseInt(count, 10));\n    const binnedEntryCounts = ckmeans(\n      entryCounts,\n      Math.min(entryCounts.length, 10)\n    );\n    const sortedKeys = binnedEntryCounts\n      .map((bin) => bin\n        .map((entryCount) => messagesByEntryCount[entryCount.toString()])\n        .reduce((messages, partial) => messages.concat(partial), [])\n        .sort((msg1, msg2) => {\n          if (msg1.address < msg2.address) {\n            return 1;\n          }\n          return -1;\n        })\n        .map((msg) => msg.id))\n      .reduce((keys, bin) => keys.concat(bin), [])\n      .reverse();\n\n    return sortedKeys;\n  }\n\n  onFilterChanged(e) {\n    let val = e.target.value;\n    if (val.trim() === 'Filter') val = '';\n\n    this.setState({ filterText: val });\n  }\n\n  onFilterFocus(e) {\n    if (this.state.filterText.trim() === 'Filter') {\n      this.setState({ filterText: '' });\n    }\n  }\n\n  onFilterUnfocus(e) {\n    if (this.state.filterText.trim() === '') {\n      this.setState({ filterText: 'Filter' });\n    }\n  }\n\n  canMsgFilter(msg) {\n    const { filterText } = this.state;\n    const msgName = msg.frame ? msg.frame.name : '';\n\n    return (\n      filterText === 'Filter'\n      || filterText === ''\n      || msg.id.toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n      || msgName.toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n    );\n  }\n\n  lastSavedPretty() {\n    const { dbcLastSaved } = this.props;\n    return dbcLastSaved.fromNow();\n  }\n\n  onMessageHover(key) {\n    const { hoveredMessages } = this.state;\n    if (hoveredMessages.indexOf(key) !== -1) return;\n\n    hoveredMessages.push(key);\n    this.setState({ hoveredMessages });\n  }\n\n  onMessageHoverEnd(key) {\n    let { hoveredMessages } = this.state;\n    hoveredMessages = hoveredMessages.filter((m) => m !== key);\n    this.setState({ hoveredMessages });\n  }\n\n  onMsgRemoveClick(key) {\n    let { selectedMessages } = this.state;\n    selectedMessages = selectedMessages.filter((m) => m !== key);\n    this.props.onMessageUnselected(key);\n    this.setState({ selectedMessages });\n  }\n\n  onMessageSelected(key) {\n    // uncomment when we support multiple messages\n    // const selectedMessages = this.state.selectedMessages.filter((m) => m !== key);\n    const selectedMessages = [];\n    selectedMessages.push(key);\n    this.props.updateSelectedMessages(selectedMessages);\n    this.props.onMessageSelected(key);\n  }\n\n  orderedMessages() {\n    const { orderedMessageKeys } = this.state;\n    const { messages } = this.props;\n    return orderedMessageKeys.map((key) => messages[key]);\n  }\n\n  selectedMessageClass(messageId) {\n    return this.props.selectedMessages.includes(messageId)\n      ? 'is-selected'\n      : null;\n  }\n\n  renderMessageBytes(msg) {\n    return (\n      <tr\n        onClick={() => {\n          this.onMessageSelected(msg.id);\n        }}\n        key={msg.id}\n        className={cx(\n          'cabana-meta-messages-list-item',\n          this.selectedMessageClass(msg.id)\n        )}\n      >\n        <td>{msg.frame ? msg.frame.name : 'untitled'}</td>\n        <td>{msg.id}</td>\n        <td>{msg.entries.length}</td>\n        <td>\n          <div className=\"cabana-meta-messages-list-item-bytes\">\n            <MessageBytes\n              key={msg.id}\n              message={msg}\n              seekIndex={this.props.seekIndex}\n              seekTime={this.props.seekTime}\n              live={this.props.live}\n            />\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  renderCanMessages() {\n    return this.orderedMessages()\n      .filter(this.canMsgFilter)\n      .map(this.renderMessageBytes);\n  }\n\n  renderAvailableMessagesList() {\n    if (Object.keys(this.props.messages).length === 0) {\n      return <p>Loading messages...</p>;\n    }\n    return (\n      <>\n        <table cellPadding=\"5\">\n          <thead>\n            <tr>\n              <td>Name</td>\n              <td>ID</td>\n              <td>Count</td>\n              <td>Bytes</td>\n            </tr>\n          </thead>\n          <tbody>{this.renderCanMessages()}</tbody>\n        </table>\n      </>\n    );\n  }\n\n  saveable() {\n    try {\n      // eslint-disable-next-line\n      \"serviceWorker\" in navigator &&\n        !!new ReadableStream()\n        && !!new WritableStream(); // eslint-disable-line no-undef\n      return 'saveable';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"cabana-meta\">\n        <div className=\"cabana-meta-header\">\n          <h5 className=\"cabana-meta-header-label t-capline\">\n            Currently editing:\n          </h5>\n          <strong className=\"cabana-meta-header-filename\">\n            {this.props.dbcFilename}\n          </strong>\n          {this.props.dbcLastSaved !== null ? (\n            <div className=\"cabana-meta-header-last-saved\">\n              <p>\n                Last saved:\n                {this.lastSavedPretty()}\n              </p>\n            </div>\n          ) : null}\n          <div className={`cabana-meta-header-actions ${this.saveable()}`}>\n            <div className=\"cabana-meta-header-action\">\n              <button onClick={this.props.showLoadDbc}>Load DBC</button>\n            </div>\n            {this.saveable() && (\n              <div className=\"cabana-meta-header-action\">\n                <button onClick={this.props.saveLog}>Save Log</button>\n              </div>\n            )}\n            {this.props.shareUrl ? (\n              <div\n                className=\"cabana-meta-header-action special-wide\"\n                data-clipboard-text={this.props.shareUrl}\n                data-clipboard-action=\"copy\"\n                ref={(ref) => (ref ? new Clipboard(ref) : null)}\n              >\n                <a\n                  className=\"button\"\n                  href={this.props.shareUrl}\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Copy Share Link\n                </a>\n              </div>\n            ) : null}\n            <div className=\"cabana-meta-header-action\">\n              <button onClick={this.props.showSaveDbc}>Save DBC</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"cabana-meta-messages-header\">\n          <h5 className=\"t-capline\">Available messages</h5>\n        </div>\n        <div className=\"cabana-meta-messages-filter\">\n          <div className=\"form-field form-field--small\">\n            <input\n              type=\"text\"\n              value={this.state.filterText}\n              onFocus={this.onFilterFocus}\n              onBlur={this.onFilterUnfocus}\n              onChange={this.onFilterChanged}\n            />\n          </div>\n        </div>\n        <div className=\"cabana-meta-messages-list\">\n          {this.renderAvailableMessagesList()}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
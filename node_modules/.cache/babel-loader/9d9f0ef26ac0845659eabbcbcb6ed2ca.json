{"ast":null,"code":"var through2 = require('through2');\n\nvar BZ2 = require('./index');\n\nmodule.exports = Stream;\n\nfunction Stream() {\n  var refPromise = null;\n  var results = [];\n  return through2({}, transform, flush);\n\n  async function transform(chunk, encoding, cb) {\n    var ref = await init();\n    BZ2.sendNextChunk(ref, chunk);\n    results.forEach(this.push.bind(this)); // console.log('Transforming!', chunk.byteLength, resultBuff.byteLength);\n\n    results = [];\n    cb();\n  }\n\n  async function flush(cb) {\n    var ref = await init();\n    BZ2.flush(ref);\n    BZ2.finish(ref);\n    results.forEach(this.push.bind(this)); // console.log('Flushing!', resultBuff.byteLength);\n\n    results = [];\n    cb();\n  }\n\n  async function init() {\n    if (refPromise) {\n      return refPromise;\n    }\n\n    refPromise = BZ2.start();\n    var ref = await refPromise;\n    ref.onData(function (buff) {\n      results.push(buff);\n    });\n    return refPromise;\n  }\n}","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/wasm-bz2/stream.js"],"names":["through2","require","BZ2","module","exports","Stream","refPromise","results","transform","flush","chunk","encoding","cb","ref","init","sendNextChunk","forEach","push","bind","finish","start","onData","buff"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,SAAD,CAAjB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,MAAjB;;AAEA,SAASA,MAAT,GAAmB;AACjB,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,OAAO,GAAG,EAAd;AAEA,SAAOP,QAAQ,CAAC,EAAD,EACZQ,SADY,EACDC,KADC,CAAf;;AAGA,iBAAeD,SAAf,CAA0BE,KAA1B,EAAiCC,QAAjC,EAA2CC,EAA3C,EAA+C;AAC7C,QAAIC,GAAG,GAAG,MAAMC,IAAI,EAApB;AAEAZ,IAAAA,GAAG,CAACa,aAAJ,CAAkBF,GAAlB,EAAuBH,KAAvB;AACAH,IAAAA,OAAO,CAACS,OAAR,CAAgB,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAhB,EAJ6C,CAK7C;;AACAX,IAAAA,OAAO,GAAG,EAAV;AACAK,IAAAA,EAAE;AACH;;AAED,iBAAeH,KAAf,CAAsBG,EAAtB,EAA0B;AACxB,QAAIC,GAAG,GAAG,MAAMC,IAAI,EAApB;AACAZ,IAAAA,GAAG,CAACO,KAAJ,CAAUI,GAAV;AACAX,IAAAA,GAAG,CAACiB,MAAJ,CAAWN,GAAX;AACAN,IAAAA,OAAO,CAACS,OAAR,CAAgB,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAhB,EAJwB,CAKxB;;AACAX,IAAAA,OAAO,GAAG,EAAV;AACAK,IAAAA,EAAE;AACH;;AAED,iBAAeE,IAAf,GAAuB;AACrB,QAAIR,UAAJ,EAAgB;AACd,aAAOA,UAAP;AACD;;AACDA,IAAAA,UAAU,GAAGJ,GAAG,CAACkB,KAAJ,EAAb;AAEA,QAAIP,GAAG,GAAG,MAAMP,UAAhB;AAEAO,IAAAA,GAAG,CAACQ,MAAJ,CAAW,UAAUC,IAAV,EAAgB;AACzBf,MAAAA,OAAO,CAACU,IAAR,CAAaK,IAAb;AACD,KAFD;AAIA,WAAOhB,UAAP;AACD;AACF","sourcesContent":["var through2 = require('through2');\nvar BZ2 = require('./index');\n\nmodule.exports = Stream;\n\nfunction Stream () {\n  var refPromise = null;\n  var results = [];\n\n  return through2({\n  }, transform, flush);\n\n  async function transform (chunk, encoding, cb) {\n    var ref = await init();\n\n    BZ2.sendNextChunk(ref, chunk);\n    results.forEach(this.push.bind(this));\n    // console.log('Transforming!', chunk.byteLength, resultBuff.byteLength);\n    results = [];\n    cb();\n  }\n\n  async function flush (cb) {\n    var ref = await init();\n    BZ2.flush(ref);\n    BZ2.finish(ref);\n    results.forEach(this.push.bind(this));\n    // console.log('Flushing!', resultBuff.byteLength);\n    results = [];\n    cb();\n  }\n\n  async function init () {\n    if (refPromise) {\n      return refPromise;\n    }\n    refPromise = BZ2.start();\n\n    var ref = await refPromise;\n\n    ref.onData(function (buff) {\n      results.push(buff);\n    });\n\n    return refPromise;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
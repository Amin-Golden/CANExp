{"ast":null,"code":"'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n/**\n * [Skewness](http://en.wikipedia.org/wiki/Skewness) is\n * a measure of the extent to which a probability distribution of a\n * real-valued random variable \"leans\" to one side of the mean.\n * The skewness value can be positive or negative, or even undefined.\n *\n * Implementation is based on the adjusted Fisher-Pearson standardized\n * moment coefficient, which is the version found in Excel and several\n * statistical packages including Minitab, SAS and SPSS.\n *\n * @since 4.1.0\n * @param {Array<number>} x a sample of 3 or more data points\n * @returns {number} sample skewness\n * @throws {Error} if x has length less than 3\n * @example\n * sampleSkewness([2, 4, 6, 3, 1]); // => 0.590128656384365\n */\n\n\nfunction sampleSkewness(x\n/*: Array<number> */\n)\n/*:number*/\n{\n  if (x.length < 3) {\n    throw new Error('sampleSkewness requires at least three data points');\n  }\n\n  var meanValue = mean(x);\n  var tempValue;\n  var sumSquaredDeviations = 0;\n  var sumCubedDeviations = 0;\n\n  for (var i = 0; i < x.length; i++) {\n    tempValue = x[i] - meanValue;\n    sumSquaredDeviations += tempValue * tempValue;\n    sumCubedDeviations += tempValue * tempValue * tempValue;\n  } // this is Bessels' Correction: an adjustment made to sample statistics\n  // that allows for the reduced degree of freedom entailed in calculating\n  // values from samples rather than complete populations.\n\n\n  var besselsCorrection = x.length - 1; // Find the mean value of that list\n\n  var theSampleStandardDeviation = Math.sqrt(sumSquaredDeviations / besselsCorrection);\n  var n = x.length,\n      cubedS = Math.pow(theSampleStandardDeviation, 3);\n  return n * sumCubedDeviations / ((n - 1) * (n - 2) * cubedS);\n}\n\nmodule.exports = sampleSkewness;","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/simple-statistics/src/sample_skewness.js"],"names":["mean","require","sampleSkewness","x","length","Error","meanValue","tempValue","sumSquaredDeviations","sumCubedDeviations","i","besselsCorrection","theSampleStandardDeviation","Math","sqrt","n","cubedS","pow","module","exports"],"mappings":"AAAA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,cAAT,CAAwBC;AAAE;AAA1B;AAA+C;AAAY;AAEvD,MAAIA,CAAC,CAACC,MAAF,GAAW,CAAf,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACH;;AAED,MAAIC,SAAS,GAAGN,IAAI,CAACG,CAAD,CAApB;AACA,MAAII,SAAJ;AACA,MAAIC,oBAAoB,GAAG,CAA3B;AACA,MAAIC,kBAAkB,GAAG,CAAzB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAAC,CAACC,MAAtB,EAA8BM,CAAC,EAA/B,EAAmC;AAC/BH,IAAAA,SAAS,GAAGJ,CAAC,CAACO,CAAD,CAAD,GAAOJ,SAAnB;AACAE,IAAAA,oBAAoB,IAAID,SAAS,GAAGA,SAApC;AACAE,IAAAA,kBAAkB,IAAIF,SAAS,GAAGA,SAAZ,GAAwBA,SAA9C;AACH,GAfsD,CAiBvD;AACA;AACA;;;AACA,MAAII,iBAAiB,GAAGR,CAAC,CAACC,MAAF,GAAW,CAAnC,CApBuD,CAsBvD;;AACA,MAAIQ,0BAA0B,GAAGC,IAAI,CAACC,IAAL,CAAUN,oBAAoB,GAAGG,iBAAjC,CAAjC;AAEA,MAAII,CAAC,GAAGZ,CAAC,CAACC,MAAV;AAAA,MACIY,MAAM,GAAGH,IAAI,CAACI,GAAL,CAASL,0BAAT,EAAqC,CAArC,CADb;AAGA,SAAOG,CAAC,GAAGN,kBAAJ,IAA0B,CAACM,CAAC,GAAG,CAAL,KAAWA,CAAC,GAAG,CAAf,IAAoBC,MAA9C,CAAP;AACH;;AAEDE,MAAM,CAACC,OAAP,GAAiBjB,cAAjB","sourcesContent":["'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * [Skewness](http://en.wikipedia.org/wiki/Skewness) is\n * a measure of the extent to which a probability distribution of a\n * real-valued random variable \"leans\" to one side of the mean.\n * The skewness value can be positive or negative, or even undefined.\n *\n * Implementation is based on the adjusted Fisher-Pearson standardized\n * moment coefficient, which is the version found in Excel and several\n * statistical packages including Minitab, SAS and SPSS.\n *\n * @since 4.1.0\n * @param {Array<number>} x a sample of 3 or more data points\n * @returns {number} sample skewness\n * @throws {Error} if x has length less than 3\n * @example\n * sampleSkewness([2, 4, 6, 3, 1]); // => 0.590128656384365\n */\nfunction sampleSkewness(x /*: Array<number> */)/*:number*/ {\n\n    if (x.length < 3) {\n        throw new Error('sampleSkewness requires at least three data points');\n    }\n\n    var meanValue = mean(x);\n    var tempValue;\n    var sumSquaredDeviations = 0;\n    var sumCubedDeviations = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        tempValue = x[i] - meanValue;\n        sumSquaredDeviations += tempValue * tempValue;\n        sumCubedDeviations += tempValue * tempValue * tempValue;\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    var theSampleStandardDeviation = Math.sqrt(sumSquaredDeviations / besselsCorrection);\n\n    var n = x.length,\n        cubedS = Math.pow(theSampleStandardDeviation, 3);\n\n    return n * sumCubedDeviations / ((n - 1) * (n - 2) * cubedS);\n}\n\nmodule.exports = sampleSkewness;\n"]},"metadata":{},"sourceType":"script"}
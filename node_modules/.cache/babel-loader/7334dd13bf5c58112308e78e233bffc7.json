{"ast":null,"code":"'use strict';\n/* @flow */\n\n/**\n * The Inverse [Gaussian error function](http://en.wikipedia.org/wiki/Error_function)\n * returns a numerical approximation to the value that would have caused\n * `errorFunction()` to return x.\n *\n * @param {number} x value of error function\n * @returns {number} estimated inverted value\n */\n\nfunction inverseErrorFunction(x\n/*: number */\n)\n/*: number */\n{\n  var a = 8 * (Math.PI - 3) / (3 * Math.PI * (4 - Math.PI));\n  var inv = Math.sqrt(Math.sqrt(Math.pow(2 / (Math.PI * a) + Math.log(1 - x * x) / 2, 2) - Math.log(1 - x * x) / a) - (2 / (Math.PI * a) + Math.log(1 - x * x) / 2));\n\n  if (x >= 0) {\n    return inv;\n  } else {\n    return -inv;\n  }\n}\n\nmodule.exports = inverseErrorFunction;","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/simple-statistics/src/inverse_error_function.js"],"names":["inverseErrorFunction","x","a","Math","PI","inv","sqrt","pow","log","module","exports"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,oBAAT,CAA8BC;AAAC;AAA/B;AAA6C;AAAc;AACvD,MAAIC,CAAC,GAAI,KAAKC,IAAI,CAACC,EAAL,GAAU,CAAf,CAAD,IAAuB,IAAID,IAAI,CAACC,EAAT,IAAe,IAAID,IAAI,CAACC,EAAxB,CAAvB,CAAR;AAEA,MAAIC,GAAG,GAAGF,IAAI,CAACG,IAAL,CAAUH,IAAI,CAACG,IAAL,CAChBH,IAAI,CAACI,GAAL,CAAS,KAAKJ,IAAI,CAACC,EAAL,GAAUF,CAAf,IAAoBC,IAAI,CAACK,GAAL,CAAS,IAAIP,CAAC,GAAGA,CAAjB,IAAsB,CAAnD,EAAsD,CAAtD,IACAE,IAAI,CAACK,GAAL,CAAS,IAAIP,CAAC,GAAGA,CAAjB,IAAsBC,CAFN,KAGf,KAAKC,IAAI,CAACC,EAAL,GAAUF,CAAf,IAAoBC,IAAI,CAACK,GAAL,CAAS,IAAIP,CAAC,GAAGA,CAAjB,IAAsB,CAH3B,CAAV,CAAV;;AAKA,MAAIA,CAAC,IAAI,CAAT,EAAY;AACR,WAAOI,GAAP;AACH,GAFD,MAEO;AACH,WAAO,CAACA,GAAR;AACH;AACJ;;AAEDI,MAAM,CAACC,OAAP,GAAiBV,oBAAjB","sourcesContent":["'use strict';\n/* @flow */\n\n/**\n * The Inverse [Gaussian error function](http://en.wikipedia.org/wiki/Error_function)\n * returns a numerical approximation to the value that would have caused\n * `errorFunction()` to return x.\n *\n * @param {number} x value of error function\n * @returns {number} estimated inverted value\n */\nfunction inverseErrorFunction(x/*: number */)/*: number */ {\n    var a = (8 * (Math.PI - 3)) / (3 * Math.PI * (4 - Math.PI));\n\n    var inv = Math.sqrt(Math.sqrt(\n        Math.pow(2 / (Math.PI * a) + Math.log(1 - x * x) / 2, 2) -\n        Math.log(1 - x * x) / a) -\n        (2 / (Math.PI * a) + Math.log(1 - x * x) / 2));\n\n    if (x >= 0) {\n        return inv;\n    } else {\n        return -inv;\n    }\n}\n\nmodule.exports = inverseErrorFunction;\n"]},"metadata":{},"sourceType":"script"}
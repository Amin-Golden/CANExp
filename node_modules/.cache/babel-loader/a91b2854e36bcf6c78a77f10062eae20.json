{"ast":null,"code":"\"use strict\";\n/**\n * @author jdiaz5513\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar debug_1 = require(\"debug\");\n\nvar list_element_size_1 = require(\"../list-element-size\");\n\nvar list_1 = require(\"./list\");\n\nvar pointer_1 = require(\"./pointer\");\n\nvar trace = debug_1.default('capnp:list:composite');\ntrace('load');\n\nvar BoolList =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(BoolList, _super);\n\n  function BoolList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BoolList.prototype.get = function (index) {\n    var bitMask = 1 << index % 8;\n    var byteOffset = index >>> 3;\n    var c = pointer_1.getContent(this);\n    var v = c.segment.getUint8(c.byteOffset + byteOffset);\n    return (v & bitMask) !== 0;\n  };\n\n  BoolList.prototype.set = function (index, value) {\n    var bitMask = 1 << index % 8;\n    var c = pointer_1.getContent(this);\n    var byteOffset = c.byteOffset + (index >>> 3);\n    var v = c.segment.getUint8(byteOffset);\n    c.segment.setUint8(byteOffset, value ? v | bitMask : v & ~bitMask);\n  };\n\n  BoolList.prototype.toString = function () {\n    return \"Bool_\" + _super.prototype.toString.call(this);\n  };\n\n  BoolList._capnp = {\n    displayName: 'List<boolean>',\n    size: list_element_size_1.ListElementSize.BIT\n  };\n  return BoolList;\n}(list_1.List);\n\nexports.BoolList = BoolList;","map":{"version":3,"sources":["serialization/pointers/bool-list.ts"],"names":[],"mappings":";AAAA;;AAEG;;;;;;;;AAEH,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,mBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,IAAM,KAAK,GAAG,OAAA,CAAA,OAAA,CAAU,sBAAV,CAAd;AACA,KAAK,CAAC,MAAD,CAAL;;AAEA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,OAAA,CAAA,SAAA,CAAA,QAAA,EAAA,MAAA;;AAA9B,WAAA,QAAA,GAAA;;AAmCC;;AA5BC,EAAA,QAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,KAAJ,EAAiB;AAEf,QAAM,OAAO,GAAG,KAAK,KAAK,GAAG,CAA7B;AACA,QAAM,UAAU,GAAG,KAAK,KAAK,CAA7B;AACA,QAAM,CAAC,GAAG,SAAA,CAAA,UAAA,CAAW,IAAX,CAAV;AACA,QAAM,CAAC,GAAG,CAAC,CAAC,OAAF,CAAU,QAAV,CAAmB,CAAC,CAAC,UAAF,GAAe,UAAlC,CAAV;AAEA,WAAO,CAAC,CAAC,GAAG,OAAL,MAAkB,CAAzB;AAED,GATD;;AAWA,EAAA,QAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,KAAJ,EAAmB,KAAnB,EAAiC;AAE/B,QAAM,OAAO,GAAG,KAAK,KAAK,GAAG,CAA7B;AACA,QAAM,CAAC,GAAG,SAAA,CAAA,UAAA,CAAW,IAAX,CAAV;AACA,QAAM,UAAU,GAAG,CAAC,CAAC,UAAF,IAAgB,KAAK,KAAK,CAA1B,CAAnB;AACA,QAAM,CAAC,GAAG,CAAC,CAAC,OAAF,CAAU,QAAV,CAAmB,UAAnB,CAAV;AAEA,IAAA,CAAC,CAAC,OAAF,CAAU,QAAV,CAAmB,UAAnB,EAA+B,KAAK,GAAG,CAAC,GAAG,OAAP,GAAiB,CAAC,GAAG,CAAC,OAA1D;AAED,GATD;;AAWA,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AAEE,WAAO,UAAQ,MAAA,CAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd,CAAf;AAED,GAJD;;AA3BgB,EAAA,QAAA,CAAA,MAAA,GAAoB;AAClC,IAAA,WAAW,EAAE,eADqB;AAElC,IAAA,IAAI,EAAE,mBAAA,CAAA,eAAA,CAAgB;AAFY,GAApB;AAiClB,SAAA,QAAA;AAAC,CAnCD,CAA8B,MAAA,CAAA,IAA9B,CAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"../../../src","sourcesContent":["\"use strict\";\n/**\n * @author jdiaz5513\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar debug_1 = require(\"debug\");\nvar list_element_size_1 = require(\"../list-element-size\");\nvar list_1 = require(\"./list\");\nvar pointer_1 = require(\"./pointer\");\nvar trace = debug_1.default('capnp:list:composite');\ntrace('load');\nvar BoolList = /** @class */ (function (_super) {\n    tslib_1.__extends(BoolList, _super);\n    function BoolList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BoolList.prototype.get = function (index) {\n        var bitMask = 1 << index % 8;\n        var byteOffset = index >>> 3;\n        var c = pointer_1.getContent(this);\n        var v = c.segment.getUint8(c.byteOffset + byteOffset);\n        return (v & bitMask) !== 0;\n    };\n    BoolList.prototype.set = function (index, value) {\n        var bitMask = 1 << index % 8;\n        var c = pointer_1.getContent(this);\n        var byteOffset = c.byteOffset + (index >>> 3);\n        var v = c.segment.getUint8(byteOffset);\n        c.segment.setUint8(byteOffset, value ? v | bitMask : v & ~bitMask);\n    };\n    BoolList.prototype.toString = function () {\n        return \"Bool_\" + _super.prototype.toString.call(this);\n    };\n    BoolList._capnp = {\n        displayName: 'List<boolean>',\n        size: list_element_size_1.ListElementSize.BIT,\n    };\n    return BoolList;\n}(list_1.List));\nexports.BoolList = BoolList;\n\n//# sourceMappingURL=bool-list.js.map\n"]},"metadata":{},"sourceType":"script"}
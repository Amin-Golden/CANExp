{"ast":null,"code":"var _jsxFileName = \"/home/amax/Autoro/cabana/src/components/SaveDbcModal.js\";\nimport React, { Component } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport FileSaver from 'file-saver';\nimport OpenDbc from '../api/OpenDbc';\nimport DBC from '../models/can/dbc';\nimport Modal from './Modals/baseModal'; // import TabStyles from '../styles/modal-tabs';\n\nexport default class SaveDbcModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: 'GitHub',\n      openDbcFork: null,\n      dbcFilename: this.props.sourceDbcFilename,\n      tabs: ['GitHub', 'Download'],\n      commitMessage: 'OpenDBC updates'\n    };\n    this.commitToGitHub = this.commitToGitHub.bind(this);\n    this.downloadDbcFile = this.downloadDbcFile.bind(this);\n    this.forkOpenDbcAndWait = this.forkOpenDbcAndWait.bind(this);\n    this.renderForkButton = this.renderForkButton.bind(this);\n    this.renderTabNavigation = this.renderTabNavigation.bind(this);\n    this.renderActions = this.renderActions.bind(this);\n  }\n\n  async componentDidMount() {\n    const openDbcFork = await this.props.openDbcClient.getUserOpenDbcFork();\n    this.setState({\n      openDbcFork\n    });\n  }\n\n  async commitToGitHub() {\n    const {\n      openDbcFork,\n      dbcFilename\n    } = this.state;\n    const filename = `${dbcFilename.replace(/\\.dbc/g, '')}.dbc`;\n    const success = await this.props.openDbcClient.commitFile(openDbcFork, filename, this.props.dbc.text(), this.state.commitMessage);\n\n    if (success) {\n      this.props.onDbcSaved(filename);\n    }\n  }\n\n  async downloadDbcFile() {\n    const blob = new Blob([this.props.dbc.text()], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const filename = `${this.state.dbcFilename.replace(/\\.dbc/g, '')}.dbc`;\n    FileSaver.saveAs(blob, filename, true);\n  }\n\n  async forkOpenDbcAndWait() {\n    const forkResponseSuccess = await this.props.openDbcClient.fork();\n\n    if (forkResponseSuccess) {\n      let isTimedOut = false;\n      const timeout = window.setTimeout(() => {\n        isTimedOut = true;\n      }, 30000);\n      const interval = window.setInterval(() => {\n        if (!isTimedOut) {\n          this.props.openDbcClient.getUserOpenDbcFork().then(openDbcFork => {\n            if (openDbcFork !== null) {\n              this.setState({\n                openDbcFork\n              });\n              window.clearInterval(interval);\n              window.clearTimeout(timeout);\n            }\n          });\n        } else {\n          window.clearInterval(interval);\n        }\n      }, 3000);\n    } else {// fork failed\n    }\n  }\n\n  primaryActionDisabled() {\n    const {\n      tab\n    } = this.state;\n\n    if (tab === 'GitHub') {\n      return this.state.openDbcFork != null && this.state.dbcFilename.length > 0;\n    }\n\n    if (tab === 'Download') {\n      return true;\n    }\n  }\n\n  renderForkButton() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.forkOpenDbcAndWait,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-code-fork\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \" Fork OpenDBC\"));\n  }\n\n  renderForkStep() {\n    const {\n      openDbcFork\n    } = this.state;\n    let content;\n\n    if (openDbcFork !== null) {\n      content = /*#__PURE__*/React.createElement(\"button\", {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-code-fork\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, ' ', \"Forked:\", openDbcFork));\n    } else if (this.props.hasGithubAuth) {\n      content = this.renderForkButton();\n    } else {\n      content = this.props.loginWithGithub;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, openDbcFork !== null ? this.renderForkButton() : null, content, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderFilenameField() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-field\",\n      \"data-extension\": \".dbc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"filename\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"Choose a filename:\"), /*#__PURE__*/React.createElement(\"sup\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"Pick a unique name for your car DBC file\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"filename\",\n      value: this.state.dbcFilename.replace(/\\.dbc/g, ''),\n      size: this.state.dbcFilename.length + 2,\n      onChange: e => this.setState({\n        dbcFilename: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderTabNavigation() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cabana-tabs-navigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, this.state.tabs.map(tab => /*#__PURE__*/React.createElement(\"button\", {\n      className: cx({\n        'is-active': this.state.tab === tab\n      }),\n      onClick: () => {\n        this.setState({\n          tab\n        });\n      },\n      key: tab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, tab))));\n  }\n\n  renderCommitMessage() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"commit-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"Commit Message:\"), /*#__PURE__*/React.createElement(\"sup\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, \"Message appears in git logs\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"commit-message\",\n      value: this.state.commitMessage,\n      onChange: e => this.setState({\n        commitMessage: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderTabContent() {\n    const {\n      tab\n    } = this.state;\n\n    if (tab === 'GitHub') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, this.renderForkStep(), this.renderFilenameField(), this.renderCommitMessage());\n    }\n\n    if (tab === 'Download') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 14\n        }\n      }, this.renderFilenameField());\n    }\n  }\n\n  renderActions() {\n    const {\n      tab\n    } = this.state;\n\n    if (tab === 'GitHub') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button--inverted\",\n        onClick: this.props.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, \"Cancel\")), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button--primary\",\n        onClick: this.commitToGitHub,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, \"Commit to GitHub\")));\n    }\n\n    if (tab === 'Download') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button--inverted\",\n        onClick: this.props.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      }, \"Cancel\")), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button--primary\",\n        onClick: this.downloadDbcFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }, \"Download\")));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      title: \"Save DBC File\",\n      subtitle: \"Save your progress and output to a DBC file\",\n      handleClose: this.props.handleClose,\n      navigation: this.renderTabNavigation(),\n      actions: this.renderActions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }\n    }, this.renderTabContent());\n  }\n\n}\nSaveDbcModal.propTypes = {\n  dbc: PropTypes.instanceOf(DBC).isRequired,\n  sourceDbcFilename: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  onDbcSaved: PropTypes.func.isRequired,\n  openDbcClient: PropTypes.instanceOf(OpenDbc).isRequired,\n  hasGithubAuth: PropTypes.bool.isRequired,\n  loginWithGithub: PropTypes.element.isRequired\n};","map":{"version":3,"sources":["/home/amax/Autoro/cabana/src/components/SaveDbcModal.js"],"names":["React","Component","cx","PropTypes","FileSaver","OpenDbc","DBC","Modal","SaveDbcModal","constructor","props","state","tab","openDbcFork","dbcFilename","sourceDbcFilename","tabs","commitMessage","commitToGitHub","bind","downloadDbcFile","forkOpenDbcAndWait","renderForkButton","renderTabNavigation","renderActions","componentDidMount","openDbcClient","getUserOpenDbcFork","setState","filename","replace","success","commitFile","dbc","text","onDbcSaved","blob","Blob","type","saveAs","forkResponseSuccess","fork","isTimedOut","timeout","window","setTimeout","interval","setInterval","then","clearInterval","clearTimeout","primaryActionDisabled","length","renderForkStep","content","hasGithubAuth","loginWithGithub","renderFilenameField","e","target","value","map","renderCommitMessage","renderTabContent","handleClose","render","propTypes","instanceOf","isRequired","string","func","bool","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport FileSaver from 'file-saver';\n\nimport OpenDbc from '../api/OpenDbc';\nimport DBC from '../models/can/dbc';\nimport Modal from './Modals/baseModal';\n// import TabStyles from '../styles/modal-tabs';\n\nexport default class SaveDbcModal extends Component {\n  static propTypes = {\n    dbc: PropTypes.instanceOf(DBC).isRequired,\n    sourceDbcFilename: PropTypes.string.isRequired,\n    handleClose: PropTypes.func.isRequired,\n    onDbcSaved: PropTypes.func.isRequired,\n    openDbcClient: PropTypes.instanceOf(OpenDbc).isRequired,\n    hasGithubAuth: PropTypes.bool.isRequired,\n    loginWithGithub: PropTypes.element.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: 'GitHub',\n      openDbcFork: null,\n      dbcFilename: this.props.sourceDbcFilename,\n      tabs: ['GitHub', 'Download'],\n      commitMessage: 'OpenDBC updates'\n    };\n\n    this.commitToGitHub = this.commitToGitHub.bind(this);\n    this.downloadDbcFile = this.downloadDbcFile.bind(this);\n    this.forkOpenDbcAndWait = this.forkOpenDbcAndWait.bind(this);\n    this.renderForkButton = this.renderForkButton.bind(this);\n    this.renderTabNavigation = this.renderTabNavigation.bind(this);\n    this.renderActions = this.renderActions.bind(this);\n  }\n\n  async componentDidMount() {\n    const openDbcFork = await this.props.openDbcClient.getUserOpenDbcFork();\n    this.setState({ openDbcFork });\n  }\n\n  async commitToGitHub() {\n    const { openDbcFork, dbcFilename } = this.state;\n    const filename = `${dbcFilename.replace(/\\.dbc/g, '')}.dbc`;\n    const success = await this.props.openDbcClient.commitFile(\n      openDbcFork,\n      filename,\n      this.props.dbc.text(),\n      this.state.commitMessage\n    );\n    if (success) {\n      this.props.onDbcSaved(filename);\n    }\n  }\n\n  async downloadDbcFile() {\n    const blob = new Blob([this.props.dbc.text()], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const filename = `${this.state.dbcFilename.replace(/\\.dbc/g, '')}.dbc`;\n    FileSaver.saveAs(blob, filename, true);\n  }\n\n  async forkOpenDbcAndWait() {\n    const forkResponseSuccess = await this.props.openDbcClient.fork();\n    if (forkResponseSuccess) {\n      let isTimedOut = false;\n      const timeout = window.setTimeout(() => {\n        isTimedOut = true;\n      }, 30000);\n\n      const interval = window.setInterval(() => {\n        if (!isTimedOut) {\n          this.props.openDbcClient.getUserOpenDbcFork().then((openDbcFork) => {\n            if (openDbcFork !== null) {\n              this.setState({ openDbcFork });\n              window.clearInterval(interval);\n              window.clearTimeout(timeout);\n            }\n          });\n        } else {\n          window.clearInterval(interval);\n        }\n      }, 3000);\n    } else {\n      // fork failed\n    }\n  }\n\n  primaryActionDisabled() {\n    const { tab } = this.state;\n    if (tab === 'GitHub') {\n      return (\n        this.state.openDbcFork != null && this.state.dbcFilename.length > 0\n      );\n    }\n    if (tab === 'Download') {\n      return true;\n    }\n  }\n\n  renderForkButton() {\n    return (\n      <button onClick={this.forkOpenDbcAndWait}>\n        <i className=\"fa fa-code-fork\" />\n        <span> Fork OpenDBC</span>\n      </button>\n    );\n  }\n\n  renderForkStep() {\n    const { openDbcFork } = this.state;\n    let content;\n    if (openDbcFork !== null) {\n      content = (\n        <button disabled>\n          <i className=\"fa fa-code-fork\" />\n          <span>\n            {' '}\n            Forked:\n            {openDbcFork}\n          </span>\n        </button>\n      );\n    } else if (this.props.hasGithubAuth) {\n      content = this.renderForkButton();\n    } else {\n      content = this.props.loginWithGithub;\n    }\n    return (\n      <div>\n        {openDbcFork !== null ? this.renderForkButton() : null}\n        {content}\n        <hr />\n      </div>\n    );\n  }\n\n  renderFilenameField() {\n    return (\n      <div className=\"form-field\" data-extension=\".dbc\">\n        <label htmlFor=\"filename\">\n          <span>Choose a filename:</span>\n          <sup>Pick a unique name for your car DBC file</sup>\n        </label>\n        <input\n          type=\"text\"\n          id=\"filename\"\n          value={this.state.dbcFilename.replace(/\\.dbc/g, '')}\n          size={this.state.dbcFilename.length + 2}\n          onChange={(e) => this.setState({ dbcFilename: e.target.value })}\n        />\n      </div>\n    );\n  }\n\n  renderTabNavigation() {\n    return (\n      <div className=\"cabana-tabs-navigation\">\n        {this.state.tabs.map((tab) => (\n          <button\n            className={cx({ 'is-active': this.state.tab === tab })}\n            onClick={() => {\n              this.setState({ tab });\n            }}\n            key={tab}\n          >\n            <span>{tab}</span>\n          </button>\n        ))}\n      </div>\n    );\n  }\n\n  renderCommitMessage() {\n    return (\n      <div className=\"form-field\">\n        <label htmlFor=\"commit-message\">\n          <span>Commit Message:</span>\n          <sup>Message appears in git logs</sup>\n        </label>\n        <input\n          type=\"text\"\n          id=\"commit-message\"\n          value={this.state.commitMessage}\n          onChange={(e) => this.setState({ commitMessage: e.target.value })}\n        />\n      </div>\n    );\n  }\n\n  renderTabContent() {\n    const { tab } = this.state;\n    if (tab === 'GitHub') {\n      return (\n        <div>\n          {this.renderForkStep()}\n          {this.renderFilenameField()}\n          {this.renderCommitMessage()}\n        </div>\n      );\n    }\n    if (tab === 'Download') {\n      return <div>{this.renderFilenameField()}</div>;\n    }\n  }\n\n  renderActions() {\n    const { tab } = this.state;\n    if (tab === 'GitHub') {\n      return (\n        <div>\n          <button className=\"button--inverted\" onClick={this.props.handleClose}>\n            <span>Cancel</span>\n          </button>\n          <button className=\"button--primary\" onClick={this.commitToGitHub}>\n            <span>Commit to GitHub</span>\n          </button>\n        </div>\n      );\n    }\n    if (tab === 'Download') {\n      return (\n        <div>\n          <button className=\"button--inverted\" onClick={this.props.handleClose}>\n            <span>Cancel</span>\n          </button>\n          <button className=\"button--primary\" onClick={this.downloadDbcFile}>\n            <span>Download</span>\n          </button>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Modal\n        title=\"Save DBC File\"\n        subtitle=\"Save your progress and output to a DBC file\"\n        handleClose={this.props.handleClose}\n        navigation={this.renderTabNavigation()}\n        actions={this.renderActions()}\n      >\n        {this.renderTabContent()}\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
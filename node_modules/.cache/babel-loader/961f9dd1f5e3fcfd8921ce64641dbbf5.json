{"ast":null,"code":"\"use strict\";\n/**\n * @author jdiaz5513\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _makePrimitiveMaskFn(byteLength, setter) {\n  return function (x) {\n    var dv = new DataView(new ArrayBuffer(byteLength));\n    setter.call(dv, 0, x, true);\n    return dv;\n  };\n}\n/* tslint:disable:no-unsafe-any */\n\n\nexports.getFloat32Mask = _makePrimitiveMaskFn(4, DataView.prototype.setFloat32);\nexports.getFloat64Mask = _makePrimitiveMaskFn(8, DataView.prototype.setFloat64);\nexports.getInt16Mask = _makePrimitiveMaskFn(2, DataView.prototype.setInt16);\nexports.getInt32Mask = _makePrimitiveMaskFn(4, DataView.prototype.setInt32);\nexports.getInt8Mask = _makePrimitiveMaskFn(1, DataView.prototype.setInt8);\nexports.getUint16Mask = _makePrimitiveMaskFn(2, DataView.prototype.setUint16);\nexports.getUint32Mask = _makePrimitiveMaskFn(4, DataView.prototype.setUint32);\nexports.getUint8Mask = _makePrimitiveMaskFn(1, DataView.prototype.setUint8);\n/* tslint:enable:no-unsafe-any */\n\nfunction getBitMask(value, bitOffset) {\n  var dv = new DataView(new ArrayBuffer(1));\n  if (!value) return dv;\n  dv.setUint8(0, 1 << bitOffset % 8);\n  return dv;\n}\n\nexports.getBitMask = getBitMask;\n\nfunction getInt64Mask(x) {\n  return x.toDataView();\n}\n\nexports.getInt64Mask = getInt64Mask;\n\nfunction getUint64Mask(x) {\n  return x.toDataView();\n}\n\nexports.getUint64Mask = getUint64Mask;","map":{"version":3,"sources":["serialization/mask.ts"],"names":[],"mappings":";AAAA;;AAEG;;;;;;AAMH,SAAA,oBAAA,CAA8B,UAA9B,EAAkD,MAAlD,EAAwE;AAEtE,SAAO,UAAC,CAAD,EAAU;AAEf,QAAM,EAAE,GAAG,IAAI,QAAJ,CAAa,IAAI,WAAJ,CAAgB,UAAhB,CAAb,CAAX;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,EAAZ,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,IAAtB;AACA,WAAO,EAAP;AAED,GAND;AAQD;AAED;;;AAEa,OAAA,CAAA,cAAA,GAAiB,oBAAoB,CAAC,CAAD,EAAI,QAAQ,CAAC,SAAT,CAAmB,UAAvB,CAArC;AAEA,OAAA,CAAA,cAAA,GAAiB,oBAAoB,CAAC,CAAD,EAAI,QAAQ,CAAC,SAAT,CAAmB,UAAvB,CAArC;AAEA,OAAA,CAAA,YAAA,GAAe,oBAAoB,CAAC,CAAD,EAAI,QAAQ,CAAC,SAAT,CAAmB,QAAvB,CAAnC;AAEA,OAAA,CAAA,YAAA,GAAe,oBAAoB,CAAC,CAAD,EAAI,QAAQ,CAAC,SAAT,CAAmB,QAAvB,CAAnC;AAEA,OAAA,CAAA,WAAA,GAAc,oBAAoB,CAAC,CAAD,EAAI,QAAQ,CAAC,SAAT,CAAmB,OAAvB,CAAlC;AAEA,OAAA,CAAA,aAAA,GAAgB,oBAAoB,CAAC,CAAD,EAAI,QAAQ,CAAC,SAAT,CAAmB,SAAvB,CAApC;AAEA,OAAA,CAAA,aAAA,GAAgB,oBAAoB,CAAC,CAAD,EAAI,QAAQ,CAAC,SAAT,CAAmB,SAAvB,CAApC;AAEA,OAAA,CAAA,YAAA,GAAe,oBAAoB,CAAC,CAAD,EAAI,QAAQ,CAAC,SAAT,CAAmB,QAAvB,CAAnC;AAEb;;AAEA,SAAA,UAAA,CAA2B,KAA3B,EAA2C,SAA3C,EAA4D;AAE1D,MAAM,EAAE,GAAG,IAAI,QAAJ,CAAa,IAAI,WAAJ,CAAgB,CAAhB,CAAb,CAAX;AAEA,MAAI,CAAC,KAAL,EAAY,OAAO,EAAP;AAEZ,EAAA,EAAE,CAAC,QAAH,CAAY,CAAZ,EAAe,KAAK,SAAS,GAAG,CAAhC;AACA,SAAO,EAAP;AAED;;AATD,OAAA,CAAA,UAAA,GAAA,UAAA;;AAWA,SAAA,YAAA,CAA6B,CAA7B,EAAqC;AAEnC,SAAO,CAAC,CAAC,UAAF,EAAP;AAED;;AAJD,OAAA,CAAA,YAAA,GAAA,YAAA;;AAMA,SAAA,aAAA,CAA8B,CAA9B,EAAuC;AAErC,SAAO,CAAC,CAAC,UAAF,EAAP;AAED;;AAJD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"../../src","sourcesContent":["\"use strict\";\n/**\n * @author jdiaz5513\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction _makePrimitiveMaskFn(byteLength, setter) {\n    return function (x) {\n        var dv = new DataView(new ArrayBuffer(byteLength));\n        setter.call(dv, 0, x, true);\n        return dv;\n    };\n}\n/* tslint:disable:no-unsafe-any */\nexports.getFloat32Mask = _makePrimitiveMaskFn(4, DataView.prototype.setFloat32);\nexports.getFloat64Mask = _makePrimitiveMaskFn(8, DataView.prototype.setFloat64);\nexports.getInt16Mask = _makePrimitiveMaskFn(2, DataView.prototype.setInt16);\nexports.getInt32Mask = _makePrimitiveMaskFn(4, DataView.prototype.setInt32);\nexports.getInt8Mask = _makePrimitiveMaskFn(1, DataView.prototype.setInt8);\nexports.getUint16Mask = _makePrimitiveMaskFn(2, DataView.prototype.setUint16);\nexports.getUint32Mask = _makePrimitiveMaskFn(4, DataView.prototype.setUint32);\nexports.getUint8Mask = _makePrimitiveMaskFn(1, DataView.prototype.setUint8);\n/* tslint:enable:no-unsafe-any */\nfunction getBitMask(value, bitOffset) {\n    var dv = new DataView(new ArrayBuffer(1));\n    if (!value)\n        return dv;\n    dv.setUint8(0, 1 << bitOffset % 8);\n    return dv;\n}\nexports.getBitMask = getBitMask;\nfunction getInt64Mask(x) {\n    return x.toDataView();\n}\nexports.getInt64Mask = getInt64Mask;\nfunction getUint64Mask(x) {\n    return x.toDataView();\n}\nexports.getUint64Mask = getUint64Mask;\n\n//# sourceMappingURL=mask.js.map\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nmodule.exports = toJSON;\n\nfunction toJSON(capnpObject, struct) {\n  if ((typeof capnpObject === 'undefined' ? 'undefined' : _typeof(capnpObject)) !== 'object' || !capnpObject._capnp) {\n    return capnpObject;\n  }\n\n  if (Array.isArray(capnpObject)) {\n    return capnpObject.map(toJSON);\n  }\n\n  struct = struct || capnpObject.constructor;\n  var which = capnpObject.which ? capnpObject.which() : -1;\n  var unionCapsName = null;\n  var unionName = null;\n\n  if (capnpObject.constructor._capnp.displayName.startsWith('List')) {\n    return capnpObject.toArray().map(function (n) {\n      return toJSON(n);\n    });\n  }\n\n  var data = {};\n  Object.keys(capnpObject.constructor.prototype).forEach(function (method) {\n    if (!method.startsWith('get')) {\n      return;\n    }\n\n    var name = method.substr(3);\n    var capsName = '';\n    var wasLower = false;\n\n    for (var i = 0, len = name.length; i < len; ++i) {\n      if (name[i].toLowerCase() !== name[i]) {\n        if (wasLower) {\n          capsName += '_';\n        }\n\n        wasLower = false;\n      } else {\n        wasLower = true;\n      }\n\n      capsName += name[i].toUpperCase();\n    }\n\n    if (which === struct[capsName]) {\n      assignGetter(data, name, capnpObject, method);\n      unionName = name;\n      unionCapsName = capsName;\n    } else if (struct[capsName] === undefined) {\n      assignGetter(data, name, capnpObject, method);\n    }\n  });\n  return data;\n}\n\nfunction assignGetter(data, name, capnpObject, method) {\n  Object.defineProperty(data, name, {\n    enumerable: true,\n    configurable: true,\n    get: function get() {\n      var value = capnpObject[method]();\n\n      switch (value.constructor.name) {\n        case 'Uint64':\n        case 'Int64':\n          // just tostring all 64 bit ints\n          value = value.toString();\n          break;\n\n        case 'Pointer':\n          break;\n\n        default:\n          value = toJSON(value);\n          break;\n      }\n\n      Object.defineProperty(data, name, {\n        configurable: false,\n        writable: false,\n        value: value\n      });\n      return value;\n    }\n  });\n}","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/@commaai/capnp-json/dist.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","module","exports","toJSON","capnpObject","struct","_capnp","Array","isArray","map","which","unionCapsName","unionName","displayName","startsWith","toArray","n","data","Object","keys","forEach","method","name","substr","capsName","wasLower","i","len","length","toLowerCase","toUpperCase","assignGetter","undefined","defineProperty","enumerable","configurable","get","value","toString","writable"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = toJSON;\n\nfunction toJSON(capnpObject, struct) {\n  if ((typeof capnpObject === 'undefined' ? 'undefined' : _typeof(capnpObject)) !== 'object' || !capnpObject._capnp) {\n    return capnpObject;\n  }\n  if (Array.isArray(capnpObject)) {\n    return capnpObject.map(toJSON);\n  }\n  struct = struct || capnpObject.constructor;\n  var which = capnpObject.which ? capnpObject.which() : -1;\n  var unionCapsName = null;\n  var unionName = null;\n\n  if (capnpObject.constructor._capnp.displayName.startsWith('List')) {\n    return capnpObject.toArray().map(function (n) {\n      return toJSON(n);\n    });\n  }\n\n  var data = {};\n\n  Object.keys(capnpObject.constructor.prototype).forEach(function (method) {\n    if (!method.startsWith('get')) {\n      return;\n    }\n    var name = method.substr(3);\n    var capsName = '';\n    var wasLower = false;\n\n    for (var i = 0, len = name.length; i < len; ++i) {\n      if (name[i].toLowerCase() !== name[i]) {\n        if (wasLower) {\n          capsName += '_';\n        }\n        wasLower = false;\n      } else {\n        wasLower = true;\n      }\n      capsName += name[i].toUpperCase();\n    }\n\n    if (which === struct[capsName]) {\n      assignGetter(data, name, capnpObject, method);\n      unionName = name;\n      unionCapsName = capsName;\n    } else if (struct[capsName] === undefined) {\n      assignGetter(data, name, capnpObject, method);\n    }\n  });\n\n  return data;\n}\n\nfunction assignGetter(data, name, capnpObject, method) {\n  Object.defineProperty(data, name, {\n    enumerable: true,\n    configurable: true,\n    get: function get() {\n      var value = capnpObject[method]();\n      switch (value.constructor.name) {\n        case 'Uint64':\n        case 'Int64':\n          // just tostring all 64 bit ints\n          value = value.toString();\n          break;\n        case 'Pointer':\n          break;\n        default:\n          value = toJSON(value);\n          break;\n      }\n      Object.defineProperty(data, name, {\n        configurable: false,\n        writable: false,\n        value: value\n      });\n      return value;\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}
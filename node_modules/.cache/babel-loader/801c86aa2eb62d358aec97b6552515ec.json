{"ast":null,"code":"\"use strict\";\n/**\n * @author jdiaz5513\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar debug_1 = require(\"debug\");\n\nvar errors_1 = require(\"../../errors\");\n\nvar arena_kind_1 = require(\"./arena-kind\");\n\nvar multi_segment_arena_1 = require(\"./multi-segment-arena\");\n\nvar single_segment_arena_1 = require(\"./single-segment-arena\");\n\nvar trace = debug_1.default('capnp:arena');\ntrace('load');\n\nvar Arena =\n/** @class */\nfunction () {\n  function Arena() {}\n\n  Arena.allocate = allocate;\n  Arena.getBuffer = getBuffer;\n  Arena.getNumSegments = getNumSegments;\n  return Arena;\n}();\n\nexports.Arena = Arena;\n\nfunction allocate(minSize, segments, a) {\n  switch (a.kind) {\n    case arena_kind_1.ArenaKind.MULTI_SEGMENT:\n      return multi_segment_arena_1.MultiSegmentArena.allocate(minSize, a);\n\n    case arena_kind_1.ArenaKind.SINGLE_SEGMENT:\n      return single_segment_arena_1.SingleSegmentArena.allocate(minSize, segments, a);\n\n    default:\n      return errors_1.assertNever(a);\n  }\n}\n\nexports.allocate = allocate;\n\nfunction getBuffer(id, a) {\n  switch (a.kind) {\n    case arena_kind_1.ArenaKind.MULTI_SEGMENT:\n      return multi_segment_arena_1.MultiSegmentArena.getBuffer(id, a);\n\n    case arena_kind_1.ArenaKind.SINGLE_SEGMENT:\n      return single_segment_arena_1.SingleSegmentArena.getBuffer(id, a);\n\n    default:\n      return errors_1.assertNever(a);\n  }\n}\n\nexports.getBuffer = getBuffer;\n\nfunction getNumSegments(a) {\n  switch (a.kind) {\n    case arena_kind_1.ArenaKind.MULTI_SEGMENT:\n      return multi_segment_arena_1.MultiSegmentArena.getNumSegments(a);\n\n    case arena_kind_1.ArenaKind.SINGLE_SEGMENT:\n      return single_segment_arena_1.SingleSegmentArena.getNumSegments();\n\n    default:\n      return errors_1.assertNever(a);\n  }\n}\n\nexports.getNumSegments = getNumSegments;","map":{"version":3,"sources":["serialization/arena/arena.ts"],"names":[],"mappings":";AAAA;;AAEG;;;;;;AAEH,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAIA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAEA,IAAM,KAAK,GAAG,OAAA,CAAA,OAAA,CAAU,aAAV,CAAd;AACA,KAAK,CAAC,MAAD,CAAL;;AAEA,IAAA,KAAA;AAAA;AAAA,YAAA;AAAA,WAAA,KAAA,GAAA,CAMC;;AAJiB,EAAA,KAAA,CAAA,QAAA,GAAW,QAAX;AACA,EAAA,KAAA,CAAA,SAAA,GAAY,SAAZ;AACA,EAAA,KAAA,CAAA,cAAA,GAAiB,cAAjB;AAElB,SAAA,KAAA;AAAC,CAND,EAAA;;AAAsB,OAAA,CAAA,KAAA,GAAA,KAAA;;AAQtB,SAAA,QAAA,CAAyB,OAAzB,EAA0C,QAA1C,EAA+D,CAA/D,EAA0E;AAExE,UAAQ,CAAC,CAAC,IAAV;AAEE,SAAK,YAAA,CAAA,SAAA,CAAU,aAAf;AAEE,aAAO,qBAAA,CAAA,iBAAA,CAAkB,QAAlB,CAA2B,OAA3B,EAAoC,CAApC,CAAP;;AAEF,SAAK,YAAA,CAAA,SAAA,CAAU,cAAf;AAEE,aAAO,sBAAA,CAAA,kBAAA,CAAmB,QAAnB,CAA4B,OAA5B,EAAqC,QAArC,EAA+C,CAA/C,CAAP;;AAEF;AAEE,aAAO,QAAA,CAAA,WAAA,CAAY,CAAZ,CAAP;AAZJ;AAgBD;;AAlBD,OAAA,CAAA,QAAA,GAAA,QAAA;;AAoBA,SAAA,SAAA,CAA0B,EAA1B,EAAsC,CAAtC,EAAiD;AAE/C,UAAQ,CAAC,CAAC,IAAV;AAEE,SAAK,YAAA,CAAA,SAAA,CAAU,aAAf;AAEE,aAAO,qBAAA,CAAA,iBAAA,CAAkB,SAAlB,CAA4B,EAA5B,EAAgC,CAAhC,CAAP;;AAEF,SAAK,YAAA,CAAA,SAAA,CAAU,cAAf;AAEE,aAAO,sBAAA,CAAA,kBAAA,CAAmB,SAAnB,CAA6B,EAA7B,EAAiC,CAAjC,CAAP;;AAEF;AAEE,aAAO,QAAA,CAAA,WAAA,CAAY,CAAZ,CAAP;AAZJ;AAgBD;;AAlBD,OAAA,CAAA,SAAA,GAAA,SAAA;;AAoBA,SAAA,cAAA,CAA+B,CAA/B,EAA0C;AAExC,UAAQ,CAAC,CAAC,IAAV;AAEE,SAAK,YAAA,CAAA,SAAA,CAAU,aAAf;AAEE,aAAO,qBAAA,CAAA,iBAAA,CAAkB,cAAlB,CAAiC,CAAjC,CAAP;;AAEF,SAAK,YAAA,CAAA,SAAA,CAAU,cAAf;AAEE,aAAO,sBAAA,CAAA,kBAAA,CAAmB,cAAnB,EAAP;;AAEF;AAEE,aAAO,QAAA,CAAA,WAAA,CAAY,CAAZ,CAAP;AAZJ;AAgBD;;AAlBD,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"../../../src","sourcesContent":["\"use strict\";\n/**\n * @author jdiaz5513\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar debug_1 = require(\"debug\");\nvar errors_1 = require(\"../../errors\");\nvar arena_kind_1 = require(\"./arena-kind\");\nvar multi_segment_arena_1 = require(\"./multi-segment-arena\");\nvar single_segment_arena_1 = require(\"./single-segment-arena\");\nvar trace = debug_1.default('capnp:arena');\ntrace('load');\nvar Arena = /** @class */ (function () {\n    function Arena() {\n    }\n    Arena.allocate = allocate;\n    Arena.getBuffer = getBuffer;\n    Arena.getNumSegments = getNumSegments;\n    return Arena;\n}());\nexports.Arena = Arena;\nfunction allocate(minSize, segments, a) {\n    switch (a.kind) {\n        case arena_kind_1.ArenaKind.MULTI_SEGMENT:\n            return multi_segment_arena_1.MultiSegmentArena.allocate(minSize, a);\n        case arena_kind_1.ArenaKind.SINGLE_SEGMENT:\n            return single_segment_arena_1.SingleSegmentArena.allocate(minSize, segments, a);\n        default:\n            return errors_1.assertNever(a);\n    }\n}\nexports.allocate = allocate;\nfunction getBuffer(id, a) {\n    switch (a.kind) {\n        case arena_kind_1.ArenaKind.MULTI_SEGMENT:\n            return multi_segment_arena_1.MultiSegmentArena.getBuffer(id, a);\n        case arena_kind_1.ArenaKind.SINGLE_SEGMENT:\n            return single_segment_arena_1.SingleSegmentArena.getBuffer(id, a);\n        default:\n            return errors_1.assertNever(a);\n    }\n}\nexports.getBuffer = getBuffer;\nfunction getNumSegments(a) {\n    switch (a.kind) {\n        case arena_kind_1.ArenaKind.MULTI_SEGMENT:\n            return multi_segment_arena_1.MultiSegmentArena.getNumSegments(a);\n        case arena_kind_1.ArenaKind.SINGLE_SEGMENT:\n            return single_segment_arena_1.SingleSegmentArena.getNumSegments();\n        default:\n            return errors_1.assertNever(a);\n    }\n}\nexports.getNumSegments = getNumSegments;\n\n//# sourceMappingURL=arena.js.map\n"]},"metadata":{},"sourceType":"script"}
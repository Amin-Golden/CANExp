{"ast":null,"code":"'use strict';\n/* @flow */\n\n/**\n * Sampling with replacement is a type of sampling that allows the same\n * item to be picked out of a population more than once.\n *\n * @param {Array<*>} x an array of any kind of value\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} n sampled items from the population\n * @example\n * var sample = sampleWithReplacement([1, 2, 3, 4], 2);\n * sampleWithReplacement; // = [2, 4] or any other random sample of 2 items\n */\n\nfunction sampleWithReplacement\n/*::<T>*/\n(x\n/*:Array<T>*/\n, n\n/*: number */\n, randomSource\n/*:Function*/\n) {\n  if (x.length === 0) {\n    return [];\n  } // a custom random number source can be provided if you want to use\n  // a fixed seed or another random number generator, like\n  // [random-js](https://www.npmjs.org/package/random-js)\n\n\n  randomSource = randomSource || Math.random;\n  var length = x.length;\n  var sample = [];\n\n  for (var i = 0; i < n; i++) {\n    var index = Math.floor(randomSource() * length);\n    sample.push(x[index]);\n  }\n\n  return sample;\n}\n\nmodule.exports = sampleWithReplacement;","map":{"version":3,"sources":["/home/amax/Autoro/cabana/node_modules/simple-statistics/src/sample_with_replacement.js"],"names":["sampleWithReplacement","x","n","randomSource","length","Math","random","sample","i","index","floor","push","module","exports"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA;AAAqB;AAA9B,CAAwCC;AAAC;AAAzC,EACIC;AAAE;AADN,EAEIC;AAAY;AAFhB,EAE+B;AAE3B,MAAIF,CAAC,CAACG,MAAF,KAAa,CAAjB,EAAoB;AAChB,WAAO,EAAP;AACH,GAJ0B,CAM3B;AACA;AACA;;;AACAD,EAAAA,YAAY,GAAGA,YAAY,IAAIE,IAAI,CAACC,MAApC;AAEA,MAAIF,MAAM,GAAGH,CAAC,CAACG,MAAf;AACA,MAAIG,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,CAApB,EAAuBM,CAAC,EAAxB,EAA4B;AACxB,QAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,KAAKC,MAA5B,CAAZ;AAEAG,IAAAA,MAAM,CAACI,IAAP,CAAYV,CAAC,CAACQ,KAAD,CAAb;AACH;;AAED,SAAOF,MAAP;AACH;;AAEDK,MAAM,CAACC,OAAP,GAAiBb,qBAAjB","sourcesContent":["'use strict';\n/* @flow */\n\n/**\n * Sampling with replacement is a type of sampling that allows the same\n * item to be picked out of a population more than once.\n *\n * @param {Array<*>} x an array of any kind of value\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} n sampled items from the population\n * @example\n * var sample = sampleWithReplacement([1, 2, 3, 4], 2);\n * sampleWithReplacement; // = [2, 4] or any other random sample of 2 items\n */\nfunction sampleWithReplacement/*::<T>*/(x/*:Array<T>*/,\n    n /*: number */,\n    randomSource/*:Function*/) {\n\n    if (x.length === 0) {\n        return [];\n    }\n\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    var length = x.length;\n    var sample = [];\n\n    for (var i = 0; i < n; i++) {\n        var index = Math.floor(randomSource() * length);\n\n        sample.push(x[index]);\n    }\n\n    return sample;\n}\n\nmodule.exports = sampleWithReplacement;\n"]},"metadata":{},"sourceType":"script"}
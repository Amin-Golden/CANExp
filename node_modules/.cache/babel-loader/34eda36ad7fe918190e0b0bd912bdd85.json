{"ast":null,"code":"/* eslint-disable no-restricted-globals */\nexport function objToQuery(obj) {\n  return Object.keys(obj).map(k => `${k}=${encodeURIComponent(decodeURIComponent(obj[k]))}`).join('&');\n}\nexport function getUrlParameter(name) {\n  const {\n    location\n  } = window;\n  name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n  const regex = new RegExp(`[\\\\?&]${name}=([^&#]*)`);\n  const results = regex.exec(location.search);\n  return results === null ? null : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\nexport function modifyQueryParameters(_ref) {\n  let {\n    add,\n    remove = []\n  } = _ref;\n  const regex = new RegExp('[\\\\?&]([^&#]+)=([^&#]*)');\n  const results = regex.exec(location.search);\n  let params = {};\n\n  if (results != null) {\n    for (let i = 1; i < results.length - 1; i += 2) {\n      const key = results[i];\n      const value = results[i + 1];\n      params[key] = value;\n    }\n\n    for (const key in params) {\n      if (remove.indexOf(key) !== -1) {\n        delete params[key];\n      }\n    }\n\n    params = { ...params,\n      ...add\n    };\n  } else {\n    params = add;\n  }\n\n  return `${location.origin + location.pathname}?${objToQuery(params)}`;\n}","map":{"version":3,"sources":["/home/amax/Autoro/cabana/src/utils/url.js"],"names":["objToQuery","obj","Object","keys","map","k","encodeURIComponent","decodeURIComponent","join","getUrlParameter","name","location","window","replace","regex","RegExp","results","exec","search","modifyQueryParameters","add","remove","params","i","length","key","value","indexOf","origin","pathname"],"mappings":"AAAA;AACA,OAAO,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AAC9B,SAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EACJG,GADI,CACCC,CAAD,IAAQ,GAAEA,CAAE,IAAGC,kBAAkB,CAACC,kBAAkB,CAACN,GAAG,CAACI,CAAD,CAAJ,CAAnB,CAA6B,EAD9D,EAEJG,IAFI,CAEC,GAFD,CAAP;AAGD;AAED,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAeC,MAArB;AACAF,EAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,KAAb,EAAoB,KAApB,EAA2BA,OAA3B,CAAmC,MAAnC,EAA2C,KAA3C,CAAP;AACA,QAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,SAAQL,IAAK,WAAzB,CAAd;AACA,QAAMM,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWN,QAAQ,CAACO,MAApB,CAAhB;AAEA,SAAOF,OAAO,KAAK,IAAZ,GACH,IADG,GAEHT,kBAAkB,CAACS,OAAO,CAAC,CAAD,CAAP,CAAWH,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAD,CAFtB;AAGD;AAED,OAAO,SAASM,qBAAT,OAAqD;AAAA,MAAtB;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,MAAM,GAAG;AAAhB,GAAsB;AAC1D,QAAMP,KAAK,GAAG,IAAIC,MAAJ,CAAW,yBAAX,CAAd;AACA,QAAMC,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWN,QAAQ,CAACO,MAApB,CAAhB;AAEA,MAAII,MAAM,GAAG,EAAb;;AACA,MAAIN,OAAO,IAAI,IAAf,EAAqB;AACnB,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,OAAO,CAACQ,MAAR,GAAiB,CAArC,EAAwCD,CAAC,IAAI,CAA7C,EAAgD;AAC9C,YAAME,GAAG,GAAGT,OAAO,CAACO,CAAD,CAAnB;AACA,YAAMG,KAAK,GAAGV,OAAO,CAACO,CAAC,GAAG,CAAL,CAArB;AACAD,MAAAA,MAAM,CAACG,GAAD,CAAN,GAAcC,KAAd;AACD;;AACD,SAAK,MAAMD,GAAX,IAAkBH,MAAlB,EAA0B;AACxB,UAAID,MAAM,CAACM,OAAP,CAAeF,GAAf,MAAwB,CAAC,CAA7B,EAAgC;AAC9B,eAAOH,MAAM,CAACG,GAAD,CAAb;AACD;AACF;;AACDH,IAAAA,MAAM,GAAG,EAAE,GAAGA,MAAL;AAAa,SAAGF;AAAhB,KAAT;AACD,GAZD,MAYO;AACLE,IAAAA,MAAM,GAAGF,GAAT;AACD;;AAED,SAAQ,GAAET,QAAQ,CAACiB,MAAT,GAAkBjB,QAAQ,CAACkB,QAAS,IAAG7B,UAAU,CAACsB,MAAD,CAAS,EAApE;AACD","sourcesContent":["/* eslint-disable no-restricted-globals */\nexport function objToQuery(obj) {\n  return Object.keys(obj)\n    .map((k) => `${k}=${encodeURIComponent(decodeURIComponent(obj[k]))}`)\n    .join('&');\n}\n\nexport function getUrlParameter(name) {\n  const { location } = window;\n  name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n  const regex = new RegExp(`[\\\\?&]${name}=([^&#]*)`);\n  const results = regex.exec(location.search);\n\n  return results === null\n    ? null\n    : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n\nexport function modifyQueryParameters({ add, remove = [] }) {\n  const regex = new RegExp('[\\\\?&]([^&#]+)=([^&#]*)');\n  const results = regex.exec(location.search);\n\n  let params = {};\n  if (results != null) {\n    for (let i = 1; i < results.length - 1; i += 2) {\n      const key = results[i];\n      const value = results[i + 1];\n      params[key] = value;\n    }\n    for (const key in params) {\n      if (remove.indexOf(key) !== -1) {\n        delete params[key];\n      }\n    }\n    params = { ...params, ...add };\n  } else {\n    params = add;\n  }\n\n  return `${location.origin + location.pathname}?${objToQuery(params)}`;\n}\n"]},"metadata":{},"sourceType":"module"}
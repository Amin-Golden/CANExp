{"ast":null,"code":"var _jsxFileName = \"/home/amax/Autoro/cabana/src/components/PlayButton.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport default class PlayButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  imageSource() {\n    const {\n      hover\n    } = this.state;\n    const {\n      isPlaying\n    } = this.props;\n\n    if (isPlaying) {\n      if (hover) {\n        return `${process.env.PUBLIC_URL}/img/ic_pause_circle_filled_white_24px.svg`;\n      }\n\n      return `${process.env.PUBLIC_URL}/img/ic_pause_circle_outline_white_24px.svg`;\n    }\n\n    if (hover) {\n      return `${process.env.PUBLIC_URL}/img/ic_play_circle_filled_white_24px.svg`;\n    }\n\n    return `${process.env.PUBLIC_URL}/img/ic_play_circle_outline_white_24px.svg`;\n  }\n\n  onClick(e) {\n    const {\n      isPlaying\n    } = this.props;\n\n    if (!isPlaying) {\n      this.props.onPlay();\n    } else {\n      this.props.onPause();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: this.imageSource(),\n      alt: this.props.isPlaying ? 'Pause' : 'Play',\n      className: this.props.className,\n      onClick: this.onClick,\n      onMouseOver: () => this.setState({\n        hover: true\n      }),\n      onMouseLeave: () => this.setState({\n        hover: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\nPlayButton.propTypes = {\n  onPlay: PropTypes.func,\n  onPause: PropTypes.func,\n  isPlaying: PropTypes.bool,\n  className: PropTypes.string\n};","map":{"version":3,"sources":["/home/amax/Autoro/cabana/src/components/PlayButton.js"],"names":["React","Component","PropTypes","PlayButton","constructor","props","state","hover","onClick","bind","imageSource","isPlaying","process","env","PUBLIC_URL","e","onPlay","onPause","render","className","setState","propTypes","func","bool","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAQhDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAEA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEH,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAgB,KAAKN,KAA3B;;AACA,QAAIM,SAAJ,EAAe;AACb,UAAIJ,KAAJ,EAAW;AACT,eAAQ,GAAEK,OAAO,CAACC,GAAR,CAAYC,UAAW,4CAAjC;AACD;;AACD,aAAQ,GAAEF,OAAO,CAACC,GAAR,CAAYC,UAAW,6CAAjC;AACD;;AACD,QAAIP,KAAJ,EAAW;AACT,aAAQ,GAAEK,OAAO,CAACC,GAAR,CAAYC,UAAW,2CAAjC;AACD;;AACD,WAAQ,GAAEF,OAAO,CAACC,GAAR,CAAYC,UAAW,4CAAjC;AACD;;AAEDN,EAAAA,OAAO,CAACO,CAAD,EAAI;AACT,UAAM;AAAEJ,MAAAA;AAAF,QAAgB,KAAKN,KAA3B;;AAEA,QAAI,CAACM,SAAL,EAAgB;AACd,WAAKN,KAAL,CAAWW,MAAX;AACD,KAFD,MAEO;AACL,WAAKX,KAAL,CAAWY,OAAX;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,GAAG,EAAE,KAAKR,WAAL,EADP;AAEE,MAAA,GAAG,EAAE,KAAKL,KAAL,CAAWM,SAAX,GAAuB,OAAvB,GAAiC,MAFxC;AAGE,MAAA,SAAS,EAAE,KAAKN,KAAL,CAAWc,SAHxB;AAIE,MAAA,OAAO,EAAE,KAAKX,OAJhB;AAKE,MAAA,WAAW,EAAE,MAAM,KAAKY,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAE;AAAT,OAAd,CALrB;AAME,MAAA,YAAY,EAAE,MAAM,KAAKa,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAE;AAAT,OAAd,CANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAnD+C;AAA7BJ,U,CACZkB,S,GAAY;AACjBL,EAAAA,MAAM,EAAEd,SAAS,CAACoB,IADD;AAEjBL,EAAAA,OAAO,EAAEf,SAAS,CAACoB,IAFF;AAGjBX,EAAAA,SAAS,EAAET,SAAS,CAACqB,IAHJ;AAIjBJ,EAAAA,SAAS,EAAEjB,SAAS,CAACsB;AAJJ,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PlayButton extends Component {\n  static propTypes = {\n    onPlay: PropTypes.func,\n    onPause: PropTypes.func,\n    isPlaying: PropTypes.bool,\n    className: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { hover: false };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  imageSource() {\n    const { hover } = this.state;\n    const { isPlaying } = this.props;\n    if (isPlaying) {\n      if (hover) {\n        return `${process.env.PUBLIC_URL}/img/ic_pause_circle_filled_white_24px.svg`;\n      }\n      return `${process.env.PUBLIC_URL}/img/ic_pause_circle_outline_white_24px.svg`;\n    }\n    if (hover) {\n      return `${process.env.PUBLIC_URL}/img/ic_play_circle_filled_white_24px.svg`;\n    }\n    return `${process.env.PUBLIC_URL}/img/ic_play_circle_outline_white_24px.svg`;\n  }\n\n  onClick(e) {\n    const { isPlaying } = this.props;\n\n    if (!isPlaying) {\n      this.props.onPlay();\n    } else {\n      this.props.onPause();\n    }\n  }\n\n  render() {\n    return (\n      <img\n        src={this.imageSource()}\n        alt={this.props.isPlaying ? 'Pause' : 'Play'}\n        className={this.props.className}\n        onClick={this.onClick}\n        onMouseOver={() => this.setState({ hover: true })}\n        onMouseLeave={() => this.setState({ hover: false })}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
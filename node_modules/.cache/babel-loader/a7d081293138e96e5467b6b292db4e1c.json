{"ast":null,"code":"\"use strict\";\n/**\n * @author jdiaz5513\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar debug_1 = require(\"debug\");\n\nvar trace = debug_1.default('capnp:pointer-allocation-result');\ntrace('load');\n/**\n * This is used as the return value for `Pointer.prototype.initPointer`. Turns out using a class in V8 for multiple\n * return values is faster than using an array or anonymous object.\n *\n * http://jsben.ch/#/zTdbD\n *\n * @export\n * @class PointerAllocationResult\n */\n\nvar PointerAllocationResult =\n/** @class */\nfunction () {\n  function PointerAllocationResult(pointer, offsetWords) {\n    this.pointer = pointer;\n    this.offsetWords = offsetWords;\n  }\n\n  return PointerAllocationResult;\n}();\n\nexports.PointerAllocationResult = PointerAllocationResult;","map":{"version":3,"sources":["serialization/pointers/pointer-allocation-result.ts"],"names":[],"mappings":";AAAA;;AAEG;;;;;;AAEH,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAIA,IAAM,KAAK,GAAG,OAAA,CAAA,OAAA,CAAU,iCAAV,CAAd;AACA,KAAK,CAAC,MAAD,CAAL;AAEA;;;;;;;;AAQG;;AAEH,IAAA,uBAAA;AAAA;AAAA,YAAA;AAME,WAAA,uBAAA,CAAY,OAAZ,EAA8B,WAA9B,EAAiD;AAE/C,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,WAAL,GAAmB,WAAnB;AAED;;AAEH,SAAA,uBAAA;AAAC,CAbD,EAAA;;AAAa,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"../../../src","sourcesContent":["\"use strict\";\n/**\n * @author jdiaz5513\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar debug_1 = require(\"debug\");\nvar trace = debug_1.default('capnp:pointer-allocation-result');\ntrace('load');\n/**\n * This is used as the return value for `Pointer.prototype.initPointer`. Turns out using a class in V8 for multiple\n * return values is faster than using an array or anonymous object.\n *\n * http://jsben.ch/#/zTdbD\n *\n * @export\n * @class PointerAllocationResult\n */\nvar PointerAllocationResult = /** @class */ (function () {\n    function PointerAllocationResult(pointer, offsetWords) {\n        this.pointer = pointer;\n        this.offsetWords = offsetWords;\n    }\n    return PointerAllocationResult;\n}());\nexports.PointerAllocationResult = PointerAllocationResult;\n\n//# sourceMappingURL=pointer-allocation-result.js.map\n"]},"metadata":{},"sourceType":"script"}
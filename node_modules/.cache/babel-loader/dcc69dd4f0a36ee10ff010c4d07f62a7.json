{"ast":null,"code":"\"use strict\";\n/**\n * @author jdiaz5513\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar debug_1 = require(\"debug\");\n\nvar _ = require(\"../util\");\n\nvar trace = debug_1.default('capnp:object-size');\ntrace('load');\n/**\n * A simple object that describes the size of a struct.\n *\n * @export\n * @class ObjectSize\n */\n\nvar ObjectSize =\n/** @class */\nfunction () {\n  function ObjectSize(dataByteLength, pointerCount) {\n    this.dataByteLength = dataByteLength;\n    this.pointerLength = pointerCount;\n  }\n\n  ObjectSize.prototype.toString = function () {\n    return _.format('ObjectSize_dw:%d,pc:%d', getDataWordLength(this), this.pointerLength);\n  };\n\n  return ObjectSize;\n}();\n\nexports.ObjectSize = ObjectSize;\n\nfunction getByteLength(o) {\n  return o.dataByteLength + o.pointerLength * 8;\n}\n\nexports.getByteLength = getByteLength;\n\nfunction getDataWordLength(o) {\n  return o.dataByteLength / 8;\n}\n\nexports.getDataWordLength = getDataWordLength;\n\nfunction getWordLength(o) {\n  return o.dataByteLength / 8 + o.pointerLength;\n}\n\nexports.getWordLength = getWordLength;\n\nfunction padToWord(o) {\n  return new ObjectSize(_.padToWord(o.dataByteLength), o.pointerLength);\n}\n\nexports.padToWord = padToWord;","map":{"version":3,"sources":["serialization/object-size.ts"],"names":[],"mappings":";AAAA;;AAEG;;;;;;AAEH,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,CAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAM,KAAK,GAAG,OAAA,CAAA,OAAA,CAAU,mBAAV,CAAd;AACA,KAAK,CAAC,MAAD,CAAL;AAEA;;;;;AAKG;;AAEH,IAAA,UAAA;AAAA;AAAA,YAAA;AAUE,WAAA,UAAA,CAAY,cAAZ,EAAoC,YAApC,EAAwD;AAEtD,SAAK,cAAL,GAAsB,cAAtB;AACA,SAAK,aAAL,GAAqB,YAArB;AAED;;AAED,EAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AAEE,WAAO,CAAC,CAAC,MAAF,CAAS,wBAAT,EAAmC,iBAAiB,CAAC,IAAD,CAApD,EAA4D,KAAK,aAAjE,CAAP;AAED,GAJD;;AAMF,SAAA,UAAA;AAAC,CAvBD,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA;;AAyBb,SAAA,aAAA,CAA8B,CAA9B,EAA2C;AAEzC,SAAO,CAAC,CAAC,cAAF,GAAmB,CAAC,CAAC,aAAF,GAAkB,CAA5C;AAED;;AAJD,OAAA,CAAA,aAAA,GAAA,aAAA;;AAMA,SAAA,iBAAA,CAAkC,CAAlC,EAA+C;AAE7C,SAAO,CAAC,CAAC,cAAF,GAAmB,CAA1B;AAED;;AAJD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAMA,SAAA,aAAA,CAA8B,CAA9B,EAA2C;AAEzC,SAAO,CAAC,CAAC,cAAF,GAAmB,CAAnB,GAAuB,CAAC,CAAC,aAAhC;AAED;;AAJD,OAAA,CAAA,aAAA,GAAA,aAAA;;AAMA,SAAA,SAAA,CAA0B,CAA1B,EAAuC;AAErC,SAAO,IAAI,UAAJ,CAAe,CAAC,CAAC,SAAF,CAAY,CAAC,CAAC,cAAd,CAAf,EAA8C,CAAC,CAAC,aAAhD,CAAP;AAED;;AAJD,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"../../src","sourcesContent":["\"use strict\";\n/**\n * @author jdiaz5513\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar debug_1 = require(\"debug\");\nvar _ = require(\"../util\");\nvar trace = debug_1.default('capnp:object-size');\ntrace('load');\n/**\n * A simple object that describes the size of a struct.\n *\n * @export\n * @class ObjectSize\n */\nvar ObjectSize = /** @class */ (function () {\n    function ObjectSize(dataByteLength, pointerCount) {\n        this.dataByteLength = dataByteLength;\n        this.pointerLength = pointerCount;\n    }\n    ObjectSize.prototype.toString = function () {\n        return _.format('ObjectSize_dw:%d,pc:%d', getDataWordLength(this), this.pointerLength);\n    };\n    return ObjectSize;\n}());\nexports.ObjectSize = ObjectSize;\nfunction getByteLength(o) {\n    return o.dataByteLength + o.pointerLength * 8;\n}\nexports.getByteLength = getByteLength;\nfunction getDataWordLength(o) {\n    return o.dataByteLength / 8;\n}\nexports.getDataWordLength = getDataWordLength;\nfunction getWordLength(o) {\n    return o.dataByteLength / 8 + o.pointerLength;\n}\nexports.getWordLength = getWordLength;\nfunction padToWord(o) {\n    return new ObjectSize(_.padToWord(o.dataByteLength), o.pointerLength);\n}\nexports.padToWord = padToWord;\n\n//# sourceMappingURL=object-size.js.map\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import DBC from '../models/can/dbc';\nexport function fetchPersistedDbc(routeName) {\n  const maybeDbc = window.localStorage.getItem(routeName);\n\n  if (maybeDbc !== null) {\n    const {\n      dbcFilename,\n      dbcText\n    } = JSON.parse(maybeDbc);\n    const dbc = new DBC(dbcText);\n    return {\n      dbc,\n      dbcText,\n      dbcFilename\n    };\n  }\n\n  return null;\n}\nexport function persistDbc(routeName, _ref) {\n  let {\n    dbcFilename,\n    dbc\n  } = _ref;\n  const dbcJson = JSON.stringify({\n    dbcFilename,\n    dbcText: dbc.text()\n  });\n  window.localStorage.setItem(routeName, dbcJson);\n}\nconst GITHUB_AUTH_TOKEN_LOCALSTORAGE_KEY = 'gh_auth_token';\nexport function fetchPersistedGithubAuthToken() {\n  return window.localStorage.getItem(GITHUB_AUTH_TOKEN_LOCALSTORAGE_KEY);\n}\nexport function unpersistGithubAuthToken() {\n  window.localStorage.removeItem(GITHUB_AUTH_TOKEN_LOCALSTORAGE_KEY);\n}\nexport function persistGithubAuthToken(token) {\n  return window.localStorage.setItem(GITHUB_AUTH_TOKEN_LOCALSTORAGE_KEY, token);\n}","map":{"version":3,"sources":["/home/amax/Autoro/cabana/src/api/localstorage.js"],"names":["DBC","fetchPersistedDbc","routeName","maybeDbc","window","localStorage","getItem","dbcFilename","dbcText","JSON","parse","dbc","persistDbc","dbcJson","stringify","text","setItem","GITHUB_AUTH_TOKEN_LOCALSTORAGE_KEY","fetchPersistedGithubAuthToken","unpersistGithubAuthToken","removeItem","persistGithubAuthToken","token"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AAEA,OAAO,SAASC,iBAAT,CAA2BC,SAA3B,EAAsC;AAC3C,QAAMC,QAAQ,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BJ,SAA5B,CAAjB;;AACA,MAAIC,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAM;AAAEI,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA2BC,IAAI,CAACC,KAAL,CAAWP,QAAX,CAAjC;AACA,UAAMQ,GAAG,GAAG,IAAIX,GAAJ,CAAQQ,OAAR,CAAZ;AAEA,WAAO;AAAEG,MAAAA,GAAF;AAAOH,MAAAA,OAAP;AAAgBD,MAAAA;AAAhB,KAAP;AACD;;AACD,SAAO,IAAP;AACD;AAED,OAAO,SAASK,UAAT,CAAoBV,SAApB,QAAqD;AAAA,MAAtB;AAAEK,IAAAA,WAAF;AAAeI,IAAAA;AAAf,GAAsB;AAC1D,QAAME,OAAO,GAAGJ,IAAI,CAACK,SAAL,CAAe;AAC7BP,IAAAA,WAD6B;AAE7BC,IAAAA,OAAO,EAAEG,GAAG,CAACI,IAAJ;AAFoB,GAAf,CAAhB;AAIAX,EAAAA,MAAM,CAACC,YAAP,CAAoBW,OAApB,CAA4Bd,SAA5B,EAAuCW,OAAvC;AACD;AAED,MAAMI,kCAAkC,GAAG,eAA3C;AACA,OAAO,SAASC,6BAAT,GAAyC;AAC9C,SAAOd,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BW,kCAA5B,CAAP;AACD;AAED,OAAO,SAASE,wBAAT,GAAoC;AACzCf,EAAAA,MAAM,CAACC,YAAP,CAAoBe,UAApB,CAA+BH,kCAA/B;AACD;AAED,OAAO,SAASI,sBAAT,CAAgCC,KAAhC,EAAuC;AAC5C,SAAOlB,MAAM,CAACC,YAAP,CAAoBW,OAApB,CAA4BC,kCAA5B,EAAgEK,KAAhE,CAAP;AACD","sourcesContent":["import DBC from '../models/can/dbc';\n\nexport function fetchPersistedDbc(routeName) {\n  const maybeDbc = window.localStorage.getItem(routeName);\n  if (maybeDbc !== null) {\n    const { dbcFilename, dbcText } = JSON.parse(maybeDbc);\n    const dbc = new DBC(dbcText);\n\n    return { dbc, dbcText, dbcFilename };\n  }\n  return null;\n}\n\nexport function persistDbc(routeName, { dbcFilename, dbc }) {\n  const dbcJson = JSON.stringify({\n    dbcFilename,\n    dbcText: dbc.text()\n  });\n  window.localStorage.setItem(routeName, dbcJson);\n}\n\nconst GITHUB_AUTH_TOKEN_LOCALSTORAGE_KEY = 'gh_auth_token';\nexport function fetchPersistedGithubAuthToken() {\n  return window.localStorage.getItem(GITHUB_AUTH_TOKEN_LOCALSTORAGE_KEY);\n}\n\nexport function unpersistGithubAuthToken() {\n  window.localStorage.removeItem(GITHUB_AUTH_TOKEN_LOCALSTORAGE_KEY);\n}\n\nexport function persistGithubAuthToken(token) {\n  return window.localStorage.setItem(GITHUB_AUTH_TOKEN_LOCALSTORAGE_KEY, token);\n}\n"]},"metadata":{},"sourceType":"module"}